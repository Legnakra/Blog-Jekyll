<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-02-04T16:50:21+01:00</updated><id>/feed.xml</id><title type="html">sysmaria</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Taller Docker - Escenarios multicontenedor en Docker</title><link href="/iaw/2023/01/27/docker-multicontenedor.html" rel="alternate" type="text/html" title="Taller Docker - Escenarios multicontenedor en Docker" /><published>2023-01-27T16:11:17+01:00</published><updated>2023-01-27T16:11:17+01:00</updated><id>/iaw/2023/01/27/docker-multicontenedor</id><content type="html" xml:base="/iaw/2023/01/27/docker-multicontenedor.html"><![CDATA[<h2 id="despliegue-de-nextcloud-en-docker">Despliegue de Nextcloud en Docker</h2>

<p>Vamos a desplegar la aplicación nextcloud con una base de datos  utilizando la aplicación docker-compose. Puedes coger cómo modelo el fichero docker-compose.yml el que hemos estudiado para desplegar WordPress.</p>

<ol>
  <li>
    <p>Instala docker-compose en tu ordenador.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">sudo </span>apt <span class="nb">install </span>docker-compose
</code></pre></div>    </div>
  </li>
  <li>
    <p>Dentro de un directorio crea un fichero docker-compose.yml para realizar el despliegue de nextcloud con una base de datos. Recuerda las variables de entorno y la persistencia de información.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">mkdir </span>nextcloud
 <span class="nb">cd </span>nextcloud
 nano docker-compose.yml
</code></pre></div>    </div>

    <p>Dentro del fichero docker-compose.yml debes definir los siguientes servicios:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ```yaml
 version: '3.7'
 services:
   nextcloud:
     image: nextcloud:latest
     container_name: nextcloud
     restart: always
     ports:
       - 8080:80
     volumes:
       - nextcloud:/var/www/html
     environment:
       - MYSQL_HOST=mariadb
       - MYSQL_DATABASE=nextcloud
       - MYSQL_USER=nextcloud
       - MYSQL_PASSWORD=admin
       - MYSQL_ROOT_PASSWORD=nextcloud
   db:
     image: mariadb:latest
     container_name: nextcloud-db
     restart: always
     volumes:
       - nextcloud-db:/var/lib/mysql
     environment:
       - MYSQL_DATABASE=nextcloud
       - MYSQL_USER=nextcloud
       - MYSQL_PASSWORD=admin
       - MYSQL_ROOT_PASSWORD=nextcloud
 volumes:
     nextcloud:
     nextcloud-db:
     ```
</code></pre></div>    </div>
  </li>
  <li>
    <p>Levanta el escenario con docker-compose.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker-compose up <span class="nt">-d</span>
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller2/1.png" alt="1" /></p>
  </li>
  <li>
    <p>Muestra los contenedores con docker-compose.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker-compose ps
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller2/2.png" alt="2" /></p>
  </li>
  <li>
    <p>Accede a la aplicación y comprueba que funciona.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> http://localhost:8080
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller2/3.png" alt="3" /></p>
  </li>
  <li>
    <p>Comprueba el almacenamiento que has definido y que se ha creado una nueva red de tipo bridge.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker volume <span class="nb">ls
 </span>docker network <span class="nb">ls</span>
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller2/4.png" alt="4" /></p>
  </li>
  <li>
    <p>Borra el escenario con docker-compose.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker-compose down
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller2/5.png" alt="5" /></p>

    <p><img src="/assets/images/docker/taller2/6.png" alt="6" /></p>
  </li>
</ol>]]></content><author><name></name></author><category term="IAW" /><summary type="html"><![CDATA[Despliegue de Nextcloud en Docker]]></summary></entry><entry><title type="html">Taller Docker - Creación de imágenes Docker</title><link href="/iaw/2023/01/27/docker-imagen.html" rel="alternate" type="text/html" title="Taller Docker - Creación de imágenes Docker" /><published>2023-01-27T16:11:17+01:00</published><updated>2023-01-27T16:11:17+01:00</updated><id>/iaw/2023/01/27/docker-imagen</id><content type="html" xml:base="/iaw/2023/01/27/docker-imagen.html"><![CDATA[<h2 id="creación-de-una-imagen-a-partir-de-un-dockerfile">Creación de una imagen a partir de un Dockerfile</h2>

<ol>
  <li>
    <p>Crea una página web estática index.html. En mi caso, incluiré el CSS y el JS en el mismo fichero HTML.</p>

    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nt">&lt;html&gt;</span>
 <span class="nt">&lt;head&gt;</span>
     <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">'utf-8'</span><span class="nt">&gt;</span>
     <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">'viewport'</span> <span class="na">content=</span><span class="s">'width=device-width, initial-scale=1'</span><span class="nt">&gt;</span>
     <span class="nt">&lt;title&gt;</span>Crear Imagen Docker<span class="nt">&lt;/title&gt;</span>
        <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">"text/css"</span><span class="nt">&gt;</span>
       <span class="o">/*&lt;![</span><span class="nt">CDATA</span><span class="o">[*/</span>

             <span class="nt">html</span> <span class="p">{</span>
              <span class="nl">height</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
              <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
            <span class="p">}</span>  
              <span class="nt">body</span> <span class="p">{</span>
        <span class="nl">background</span><span class="p">:</span> <span class="nb">rgb</span><span class="p">(</span><span class="m">20</span><span class="p">,</span><span class="m">72</span><span class="p">,</span><span class="m">50</span><span class="p">);</span>
        <span class="nl">background</span><span class="p">:</span> <span class="n">-moz-linear-gradient</span><span class="p">(</span><span class="m">180deg</span><span class="p">,</span> <span class="n">rgba</span><span class="p">(</span><span class="m">23</span><span class="p">,</span><span class="m">43</span><span class="p">,</span><span class="m">70</span><span class="p">,</span><span class="m">1</span><span class="p">)</span> <span class="m">30%</span><span class="p">,</span> <span class="n">rgba</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">)</span> <span class="m">90%</span><span class="p">)</span>  <span class="p">;</span>
        <span class="nl">background</span><span class="p">:</span> <span class="n">-webkit-linear-gradient</span><span class="p">(</span><span class="m">180deg</span><span class="p">,</span> <span class="n">rgba</span><span class="p">(</span><span class="m">23</span><span class="p">,</span><span class="m">43</span><span class="p">,</span><span class="m">70</span><span class="p">,</span><span class="m">1</span><span class="p">)</span> <span class="m">30%</span><span class="p">,</span> <span class="n">rgba</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">)</span> <span class="m">90%</span><span class="p">)</span> <span class="p">;</span>
        <span class="nl">background</span><span class="p">:</span> <span class="n">linear-gradient</span><span class="p">(</span><span class="m">180deg</span><span class="p">,</span> <span class="n">rgba</span><span class="p">(</span><span class="m">23</span><span class="p">,</span><span class="m">43</span><span class="p">,</span><span class="m">70</span><span class="p">,</span><span class="m">1</span><span class="p">)</span> <span class="m">30%</span><span class="p">,</span> <span class="n">rgba</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">)</span> <span class="m">90%</span><span class="p">);</span>
        <span class="nl">background-repeat</span><span class="p">:</span> <span class="nb">no-repeat</span><span class="p">;</span>
        <span class="nl">background-attachment</span><span class="p">:</span> <span class="nb">fixed</span><span class="p">;</span>
        <span class="nl">filter</span><span class="p">:</span> <span class="n">progid</span><span class="p">:</span><span class="n">DXImageTransform</span><span class="p">.</span><span class="n">Microsoft</span><span class="p">.</span><span class="n">gradient</span><span class="p">(</span><span class="n">startColorstr</span><span class="err">=</span><span class="s1">"#3c6eb4"</span><span class="p">,</span><span class="n">endColorstr</span><span class="err">=</span><span class="s1">"#3c95b4"</span><span class="p">,</span><span class="n">GradientType</span><span class="err">=</span><span class="m">1</span><span class="p">);</span> 
              <span class="nl">color</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span>
              <span class="nl">font-size</span><span class="p">:</span> <span class="m">0.9em</span><span class="p">;</span>
              <span class="nl">font-weight</span><span class="p">:</span> <span class="m">400</span><span class="p">;</span>
              <span class="nl">font-family</span><span class="p">:</span> <span class="s2">'Montserrat'</span><span class="p">,</span> <span class="nb">sans-serif</span><span class="p">;</span>
              <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
              <span class="nl">padding</span><span class="p">:</span> <span class="m">10em</span> <span class="m">6em</span> <span class="m">10em</span> <span class="m">6em</span><span class="p">;</span>
              <span class="nl">box-sizing</span><span class="p">:</span> <span class="n">border-box</span><span class="p">;</span>      
            <span class="p">}</span>
                    <span class="nt">h1</span> <span class="p">{</span>
          <span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
          <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
          <span class="nl">padding</span><span class="p">:</span> <span class="m">0.6em</span> <span class="m">2em</span> <span class="m">0.4em</span><span class="p">;</span>
          <span class="nl">color</span><span class="p">:</span> <span class="m">#fff</span><span class="p">;</span>
          <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bold</span><span class="p">;</span>
          <span class="nl">font-family</span><span class="p">:</span> <span class="s2">'Montserrat'</span><span class="p">,</span> <span class="nb">sans-serif</span><span class="p">;</span>
          <span class="nl">font-size</span><span class="p">:</span> <span class="m">2em</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nt">h1</span> <span class="nt">strong</span> <span class="p">{</span>
          <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bolder</span><span class="p">;</span>
          <span class="nl">font-family</span><span class="p">:</span> <span class="s2">'Montserrat'</span><span class="p">,</span> <span class="nb">sans-serif</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nt">h2</span> <span class="p">{</span>
          <span class="nl">font-size</span><span class="p">:</span> <span class="m">1.5em</span><span class="p">;</span>
          <span class="nl">font-weight</span><span class="p">:</span><span class="nb">bold</span><span class="p">;</span>
        <span class="p">}</span>
              <span class="nc">.title</span> <span class="p">{</span>
          <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="no">black</span><span class="p">;</span>
          <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bold</span><span class="p">;</span>
          <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
          <span class="nl">float</span><span class="p">:</span> <span class="nb">right</span><span class="p">;</span>
          <span class="nl">width</span><span class="p">:</span> <span class="m">150px</span><span class="p">;</span>
          <span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
          <span class="nl">padding</span><span class="p">:</span> <span class="m">10px</span> <span class="m">0</span> <span class="m">10px</span> <span class="m">0</span><span class="p">;</span>
          <span class="nl">margin-top</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
        <span class="p">}</span>
              <span class="nc">.description</span> <span class="p">{</span>
          <span class="nl">padding</span><span class="p">:</span> <span class="m">45px</span> <span class="m">10px</span> <span class="m">5px</span> <span class="m">10px</span><span class="p">;</span>
          <span class="nl">clear</span><span class="p">:</span> <span class="nb">right</span><span class="p">;</span>
          <span class="nl">padding</span><span class="p">:</span> <span class="m">15px</span><span class="p">;</span>
        <span class="p">}</span>
              <span class="nc">.section</span> <span class="p">{</span>
          <span class="nl">padding-left</span><span class="p">:</span> <span class="m">3%</span><span class="p">;</span>
         <span class="nl">margin-bottom</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>
        <span class="p">}</span>
              <span class="nt">img</span> <span class="p">{</span>
                <span class="nl">padding</span><span class="p">:</span> <span class="m">2px</span><span class="p">;</span>
          <span class="nl">margin</span><span class="p">:</span> <span class="m">2px</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nt">a</span><span class="nd">:hover</span> <span class="nt">img</span> <span class="p">{</span>
          <span class="nl">padding</span><span class="p">:</span> <span class="m">2px</span><span class="p">;</span>
          <span class="nl">margin</span><span class="p">:</span> <span class="m">2px</span><span class="p">;</span>
        <span class="p">}</span>
              <span class="nd">:link</span> <span class="p">{</span>
          <span class="nl">color</span><span class="p">:</span> <span class="nb">rgb</span><span class="p">(</span><span class="m">199</span><span class="p">,</span> <span class="m">252</span><span class="p">,</span> <span class="m">77</span><span class="p">);</span>
          <span class="nl">text-shadow</span><span class="p">:</span>
        <span class="p">}</span>
        <span class="nd">:visited</span> <span class="p">{</span>
          <span class="nl">color</span><span class="p">:</span> <span class="nb">rgb</span><span class="p">(</span><span class="m">122</span><span class="p">,</span> <span class="m">206</span><span class="p">,</span> <span class="m">255</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="nt">a</span><span class="nd">:hover</span> <span class="p">{</span>
          <span class="nl">color</span><span class="p">:</span> <span class="nb">rgb</span><span class="p">(</span><span class="m">16</span><span class="p">,</span> <span class="m">44</span><span class="p">,</span> <span class="m">122</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="nc">.row</span> <span class="p">{</span>
          <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
          <span class="nl">padding</span><span class="p">:</span> <span class="m">0</span> <span class="m">10px</span> <span class="m">0</span> <span class="m">10px</span><span class="p">;</span>
        <span class="p">}</span>
              <span class="nt">footer</span> <span class="p">{</span>
          <span class="nl">padding-top</span><span class="p">:</span> <span class="m">6em</span><span class="p">;</span>
          <span class="nl">margin-bottom</span><span class="p">:</span> <span class="m">6em</span><span class="p">;</span>
          <span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
          <span class="nl">font-size</span><span class="p">:</span> <span class="nb">xx-small</span><span class="p">;</span>
          <span class="nl">overflow</span><span class="p">:</span><span class="nb">hidden</span><span class="p">;</span>
          <span class="nl">clear</span><span class="p">:</span> <span class="nb">both</span><span class="p">;</span>
        <span class="p">}</span>
              <span class="nc">.summary</span> <span class="p">{</span>
          <span class="nl">font-size</span><span class="p">:</span> <span class="m">140%</span><span class="p">;</span>
          <span class="nl">text-align</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
        <span class="p">}</span>
              <span class="nf">#rocky-poweredby</span> <span class="nt">img</span> <span class="p">{</span>
          <span class="nl">margin-left</span><span class="p">:</span> <span class="m">-10px</span><span class="p">;</span>
        <span class="p">}</span>
              <span class="nf">#logos</span> <span class="nt">img</span> <span class="p">{</span>
          <span class="nl">vertical-align</span><span class="p">:</span> <span class="nb">top</span><span class="p">;</span>
        <span class="p">}</span>
              <span class="c">/* Desktop  View Options */</span>
              <span class="k">@media</span> <span class="p">(</span><span class="n">min-width</span><span class="p">:</span> <span class="m">768px</span><span class="p">)</span>  <span class="p">{</span>
                <span class="nt">body</span> <span class="p">{</span>
            <span class="nl">padding</span><span class="p">:</span> <span class="m">10em</span> <span class="m">20%</span> <span class="cp">!important</span><span class="p">;</span>
          <span class="p">}</span>
                <span class="nc">.col-md-1</span><span class="o">,</span> <span class="nc">.col-md-2</span><span class="o">,</span> <span class="nc">.col-md-3</span><span class="o">,</span> <span class="nc">.col-md-4</span><span class="o">,</span> <span class="nc">.col-md-5</span><span class="o">,</span> <span class="nc">.col-md-6</span><span class="o">,</span>
          <span class="nc">.col-md-7</span><span class="o">,</span> <span class="nc">.col-md-8</span><span class="o">,</span> <span class="nc">.col-md-9</span><span class="o">,</span> <span class="nc">.col-md-10</span><span class="o">,</span> <span class="nc">.col-md-11</span><span class="o">,</span> <span class="nc">.col-md-12</span> <span class="p">{</span>
            <span class="nl">float</span><span class="p">:</span> <span class="nb">left</span><span class="p">;</span>
          <span class="p">}</span>
                <span class="nc">.col-md-1</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">8.33%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-md-2</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">16.66%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-md-3</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">25%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-md-4</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">33%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-md-5</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">41.66%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-md-6</span> <span class="p">{</span>
            <span class="nl">border-left</span><span class="p">:</span><span class="m">3px</span> <span class="p">;</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
                      <span class="p">}</span>
          <span class="nc">.col-md-7</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">58.33%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-md-8</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">66.66%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-md-9</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">74.99%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-md-10</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">83.33%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-md-11</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">91.66%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-md-12</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
          <span class="p">}</span>
        <span class="p">}</span>
              <span class="c">/* Mobile View Options */</span>
        <span class="k">@media</span> <span class="p">(</span><span class="n">max-width</span><span class="p">:</span> <span class="m">767px</span><span class="p">)</span> <span class="p">{</span>
          <span class="nc">.col-sm-1</span><span class="o">,</span> <span class="nc">.col-sm-2</span><span class="o">,</span> <span class="nc">.col-sm-3</span><span class="o">,</span> <span class="nc">.col-sm-4</span><span class="o">,</span> <span class="nc">.col-sm-5</span><span class="o">,</span> <span class="nc">.col-sm-6</span><span class="o">,</span>
          <span class="nc">.col-sm-7</span><span class="o">,</span> <span class="nc">.col-sm-8</span><span class="o">,</span> <span class="nc">.col-sm-9</span><span class="o">,</span> <span class="nc">.col-sm-10</span><span class="o">,</span> <span class="nc">.col-sm-11</span><span class="o">,</span> <span class="nc">.col-sm-12</span> <span class="p">{</span>
            <span class="nl">float</span><span class="p">:</span> <span class="nb">left</span><span class="p">;</span>
          <span class="p">}</span>
                <span class="nc">.col-sm-1</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">8.33%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-sm-2</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">16.66%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-sm-3</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">25%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-sm-4</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">33%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-sm-5</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">41.66%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-sm-6</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">50%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-sm-7</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">58.33%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-sm-8</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">66.66%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-sm-9</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">74.99%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-sm-10</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">83.33%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-sm-11</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">91.66%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nc">.col-sm-12</span> <span class="p">{</span>
            <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="nt">h1</span> <span class="p">{</span>
            <span class="nl">padding</span><span class="p">:</span> <span class="m">0</span> <span class="cp">!important</span><span class="p">;</span>
          <span class="p">}</span>
        <span class="p">}</span>
              <span class="nt">&lt;/style&gt;</span>
        <span class="nt">&lt;/head&gt;</span>
        <span class="nt">&lt;body&gt;</span>
               <span class="nt">&lt;h1&gt;</span>¡Bienvenid@ Docker!<span class="nt">&lt;/h1&gt;</span>
               <span class="nt">&lt;h2&gt;</span>Esta es una web desplegada desde un contenedor de Docker<span class="nt">&lt;/h2&gt;</span>
               <span class="nt">&lt;p&gt;</span>Realizado por <span class="nt">&lt;strong&gt;</span>María Jesús Alloza<span class="nt">&lt;/strong&gt;&lt;/p&gt;</span>
        <span class="nt">&lt;/body&gt;</span>
 <span class="nt">&lt;/html&gt;</span>
  
</code></pre></div>    </div>
  </li>
  <li>
    <p>Crea un fichero Dockerfile que permita crear una imagen con un servidor web sirviendo la página. Puedes usar una imagen base debian o ubuntu, o una imagen que tenga ya un servicio web, como hemos visto en el apartado Ejemplo 1: Construcción de imágenes con una página estática.</p>

    <ul>
      <li>
        <p>Primero, crea un directorio donde guardarás los ficheros de la web. En este directorio crea un fichero index.html con el contenido que quieras. En este caso, el fichero index.html es el que hemos creado en el apartado anterior.</p>

        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  mkdir mi_servidor_web
  cd servidor_web
  touch index.html
</code></pre></div>        </div>
      </li>
      <li>
        <p>Luego, crearemos un fichero Dockerfile con el siguiente contenido:</p>

        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  FROM debian
  MAINTAINER María Jesús Alloza <span class="s2">"mariajesus.alloza@outlook.es"</span>
  RUN apt-get update <span class="o">&amp;&amp;</span> apt-get <span class="nb">install</span> <span class="nt">-y</span> apache2
  COPY index.html /var/www/html/index.html
  CMD <span class="o">[</span><span class="s2">"/usr/sbin/apache2ctl"</span>, <span class="s2">"-D"</span>, <span class="s2">"FOREGROUND"</span><span class="o">]</span>
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li>
    <p>Ejecuta el comando docker que crea la nueva imagen. La imagen se debe llamar /mi_servidor_web:v1.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker build <span class="nt">-t</span> mi_servidor_web:v1 <span class="nb">.</span>
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller3/1.png" alt="1" /></p>

    <p><img src="/assets/images/docker/taller3/2.png" alt="2" /></p>

    <p>Listamos las imágenes para comprobar que se ha creado correctamente:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ```bash
 docker images
 ```
</code></pre></div>    </div>

    <p><strong>NOTA</strong>: El punto al final del comando es importante, ya que indica que el contexto de construcción es el directorio actual.</p>

    <p><img src="/assets/images/docker/taller3/3.png" alt="3" /></p>

    <ul>
      <li>
        <p>Creamos el contenedor para comprobar que funciona correctamente:</p>

        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  docker run <span class="nt">-d</span> <span class="nt">-p</span> 80:80 <span class="nt">--name</span> mi_servidor_web mi_servidor_web:v1
</code></pre></div>        </div>

        <p><img src="/assets/images/docker/taller3/4.png" alt="4" /></p>
      </li>
      <li>
        <p>Y accedemos a la página web desde el navegador:</p>

        <p><img src="/assets/images/docker/taller3/5.png" alt="5" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>Una vez comprobado, nos conectamos a Docker Hub y subimos la imagen que acabas de crear.</p>

    <ul>
      <li>
        <p>Nos creamos una cuenta en Docker Hub en su <a href="https://hub.docker.com/">página web</a>.</p>
      </li>
      <li>
        <p>Una vez creada la cuenta, nos logueamos en Docker Hub desde la terminal:</p>

        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  docker login <span class="nt">-u</span> legnakra
</code></pre></div>        </div>

        <p><img src="/assets/images/docker/taller3/6.png" alt="6" /></p>
      </li>
      <li>
        <p>Lo siguiente es preparar nuestra imagen para que sea aceptada en este registro público. Todos los registros siguen una nomenclatura a la hora de almacenar los repositorios. En el caso de Docker Hub necesitamos que nuestra imagen se llame <code class="language-plaintext highlighter-rouge">nombre_de_usuario/nombre_del_repositorio:etiqueta</code>. En nuestro caso, la imagen se llamará <code class="language-plaintext highlighter-rouge">legnakra/mi_servidor_web:v1</code>.</p>

        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  docker tag mi_servidor_web:v1 legnakra/mi_servidor_web:latest
</code></pre></div>        </div>

        <p><strong>NOTA</strong>: La etiqueta latest es la que se utiliza por defecto cuando no se especifica ninguna etiqueta. Por eso, cuando nos descarguemos la imagen, no tendremos que especificar la etiqueta. Sin embargo, si queremos descargar una imagen con una etiqueta concreta, tendremos que especificarla.</p>
      </li>
      <li>
        <p>Por último, subimos la imagen a Docker Hub:</p>

        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  docker push legnakra/mi_servidor_web:v1
  <span class="c"># O también se puede hacer:</span>
  docker push legnakra/mi_servidor_web
</code></pre></div>        </div>

        <p><img src="/assets/images/docker/taller3/7.png" alt="7" /></p>
      </li>
    </ul>

    <p>Como podemos ver <a href="https://hub.docker.com/r/legnakra/mi_servidor_web/">aquí</a>, la imagen se ha subido correctamente.</p>
  </li>
  <li>
    <p>Descargamos la imagen en otro ordenador donde tengamos docker instalado, y creamos un contenedor a partir de ella.</p>

    <p><img src="/assets/images/docker/taller3/8.png" alt="8" /></p>

    <p><img src="/assets/images/docker/taller3/9.png" alt="9" /></p>

    <p><img src="/assets/images/docker/taller3/10.png" alt="10" /></p>
  </li>
  <li>
    <p>Realizamos una modificación de la página web. Modificaremos el fichero index.html y añadiremos:</p>

    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nt">&lt;p&gt;</span>Administración de Sistemas Informáticos en Red<span class="nt">&lt;/p&gt;</span>
 # Añadimos una imagen al 50% de su tamaño
 <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"https://png2.cleanpng.com/sh/da64d3e952f3349e22eb3ec8c65d8ada/L0KzQYm3VMA5N5dqfZH0aYP2gLBuTfRwa5xqip95eYTrf7A0kB9nfKhmitc2ZHXzfLFCjfVvfF59fdRyYXzkcsS0gB9vfJJuhtd7LUXkc7K5V8Nna2ZqTtcBLkS0R4e5UcA4OWY3S6MEN0e4SYm4UMYveJ9s/kisspng-docker-python-software-deployment-xebialabs-container-5aca273fc5e6e6.4176210715231977598106.png"</span> <span class="na">alt=</span><span class="s">"docker"</span> <span class="na">width=</span><span class="s">"50%"</span><span class="nt">&gt;</span> 
</code></pre></div>    </div>
  </li>
  <li>
    <p>Vuelve a crear una nueva imagen, en esta caso pon la eiqueta v2. Súbela a Docker Hub.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker build <span class="nt">-t</span> mi_servidor_web:v2 <span class="nb">.</span>
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller3/11.png" alt="11" /></p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker tag mi_servidor_web:v2 legnakra/mi_servidor_web:latest
 docker push legnakra/mi_servidor_web:v2
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller3/12.png" alt="12" /></p>

    <ul>
      <li>
        <p>Creamos el contenedor para comprobar que funciona correctamente:</p>

        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  docker run <span class="nt">-d</span> <span class="nt">-p</span> 80:80 <span class="nt">--name</span> mi_servidor_web mi_servidor_web:v2
</code></pre></div>        </div>

        <p><img src="/assets/images/docker/taller3/13.png" alt="13" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>Por último, baja la nueva imagen en el ordenador donde está corriendo el contenedor. Para hacer la implantación de la nueva versión debes borrar el contenedor y crear uno nuevo desde la nueva versión de la imagen.</p>

    <ul>
      <li>
        <p>Primero eliminamos el contenedor que teníamos creado:</p>

        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  docker <span class="nb">rm</span> <span class="nt">-f</span> mi_servidor_web
</code></pre></div>        </div>
      </li>
      <li>
        <p>Y ahora descargamos la nueva imagen:</p>
      </li>
    </ul>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker pull legnakra/mi_servidor_web
 <span class="c"># O también se puede hacer:</span>
 docker pull legnakra/mi_servidor_web:v2
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller3/14.png" alt="14" /></p>

    <ul>
      <li>Y creamos el contenedor:</li>
    </ul>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker run <span class="nt">-d</span> <span class="nt">-p</span> 80:80 <span class="nt">--name</span> mi_servidor_web mi_servidor_web:v2
</code></pre></div>    </div>

    <p>Y como podemos ver, se han aplicado los cambios correctamente:</p>

    <p><img src="/assets/images/docker/taller3/15.png" alt="15" /></p>
  </li>
</ol>]]></content><author><name></name></author><category term="IAW" /><summary type="html"><![CDATA[Creación de una imagen a partir de un Dockerfile]]></summary></entry><entry><title type="html">Configuración de un servidor de correo en un VPS</title><link href="/hlc+sri/2023/01/22/servidor-correo.html" rel="alternate" type="text/html" title="Configuración de un servidor de correo en un VPS" /><published>2023-01-22T12:47:17+01:00</published><updated>2023-01-22T12:47:17+01:00</updated><id>/hlc+sri/2023/01/22/servidor-correo</id><content type="html" xml:base="/hlc+sri/2023/01/22/servidor-correo.html"><![CDATA[<h2 id="introducción">Introducción</h2>

<p>En este post vamos a configurar un servidor de correos en nuestro VPS. El nombre del servidor será <code class="language-plaintext highlighter-rouge">mail.mariatec.es</code>, que será el nombre que aparecerá en el registro MX.</p>

<h2 id="gestión-de-correos-desde-el-servidor">Gestión de correos desde el servidor</h2>

<p>El envío y recepción se hará desde el servidor a trávés de la herramienta <code class="language-plaintext highlighter-rouge">mail</code>.</p>

<h2 id="gestión-de-correos-desde-el-servidor-1">Gestión de correos desde el servidor</h2>

<h3 id="tarea-1">Tarea 1</h3>

<p>Lo primero que deberemos hacer es realizar un registro DNS en nuestro dominio y añadir un registro <code class="language-plaintext highlighter-rouge">A</code> con el nombre <code class="language-plaintext highlighter-rouge">mail</code> y la IP del servidor.</p>

<p>🔲 mail.mariatec.es     A       82.223.1.72</p>

<p>Y agregamos un registro SPF para evitar que nuestro servidor sea utilizado como servidor de spam.</p>

<p>🔲 mariatec.es     SPF     “v=spf1 ip4:82.223.1.72 -all”</p>

<p><img src="/assets/images/correo/correo/1.png" alt="1" /></p>

<p>Abrimos el puerto 25 en el cortafuegos del servidor y configuramos el registro PTR con el fqdn de nuestro VPS.</p>

<p><img src="/assets/images/correo/correo/2.png" alt="2" /></p>

<p>Una vez terminado esto, nos conectamos a nuestro VPS y comentamos con la configuración:</p>

<ul>
  <li>
    <p>Instalamos postfix y bsd-mailx</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  apt <span class="nb">install </span>postfix bsd-mailx
</code></pre></div>    </div>
  </li>
</ul>

<p><strong>NOTA</strong>: Recuerda que al instalar postfix te pedirá que configures el servidor de correo. En nuestro caso, seleccionamos la opción <code class="language-plaintext highlighter-rouge">Internet Site</code> y el nombre del dominio será <code class="language-plaintext highlighter-rouge">mariatec.es</code>.</p>

<ul>
  <li>
    <p>Enviaremos un correo a nuestro correo personal para comprobar que todo funciona correctamente.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">echo</span> <span class="s2">"Hola, esto es una prueba"</span> | mail <span class="nt">-s</span> <span class="s2">"Prueba"</span>
</code></pre></div>    </div>

    <p>Como podemos ver en la siguiente imagen, en el log del correo aparece el correo que hemos enviado y que ha sido recibido correctamente.</p>

    <p><img src="/assets/images/correo/correo/3.png" alt="3" /></p>

    <p><img src="/assets/images/correo/correo/4.png" alt="4" /></p>
  </li>
</ul>

<h3 id="tarea-2">Tarea 2</h3>

<p>En esta tarea, deberemos cerciorarnos de que podemos recibir correos ennuestro servidor VPS y por ello, vamos a usar el servicio de correo de gmail. Para que esto sea posible, deberemos realizar un nuevo registro MX 10 en nuestro dominio.</p>

<p>🔲 mariatec.es     MX 10    mail.mariatec.es</p>

<p>Para comprobar qeu funciona, accedemos a nuestra cuenta personal de correo y enviamos un correo a nuestro servidor.</p>

<p><img src="/assets/images/correo/correo/4.png" alt="4" /></p>

<p>Y desde nuestra consola, nos enviaremos un correo y podemos ver que ha llegado correctamente:</p>

<p><img src="/assets/images/correo/correo/5.png" alt="5" /></p>

<p><img src="/assets/images/correo/correo/6.png" alt="6" /></p>

<h2 id="uso-de-alias-y-redirecciones">Uso de alias y redirecciones</h2>

<h3 id="tarea-3">Tarea 3</h3>

<p>Para completar esta tarea, configuraremos, mediante <code class="language-plaintext highlighter-rouge">cron</code>, un script que nos permita enviar un correo cada minuto con la fecha y hora actual. Para ello, crearemos un script en <code class="language-plaintext highlighter-rouge">/usr/local/bin</code> que se llame <code class="language-plaintext highlighter-rouge">cronmail.sh</code> y que tenga el siguiente contenido:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>
<span class="nb">echo</span> <span class="s2">"=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_="</span>
<span class="nb">echo</span> <span class="s2">"Fecha y hora actual: </span><span class="si">$(</span><span class="nb">date</span><span class="si">)</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_="</span>
<span class="nb">echo</span> <span class="s2">"Uptime: </span><span class="si">$(</span><span class="nb">uptime</span><span class="si">)</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_="</span>
<span class="nb">echo</span> <span class="s2">"Estado de los procesos:"</span>
ps
</code></pre></div></div>

<p>Le damos permisos de ejecución y comprobamos que funciona correctamente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod</span> +x /root/cronmail.sh
<span class="nt">---</span>
bash /root/cronmail.sh
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/7.png" alt="7" /></p>

<p>Ahora, crearemos un archivo en <code class="language-plaintext highlighter-rouge">/etc/cron.d</code> que se llame <code class="language-plaintext highlighter-rouge">cronmail</code> y que tenga el siguiente contenido:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">MAILTO</span><span class="o">=</span>root
<span class="k">*</span> <span class="k">*</span> <span class="k">*</span> <span class="k">*</span> <span class="k">*</span> root /root/cronmail.sh
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/8.png" alt="8" /></p>

<p>Esperamos un minuto y comprobamos que el correo ha llegado correctamente:</p>

<p><img src="/assets/images/correo/correo/9.png" alt="9" /></p>

<p>Lo que hemos hecho es crear un script que se ejecuta cada minuto y que envía un correo con la fecha y hora actual, el uptime del servidor y el estado de los procesos.</p>

<p>El paso que viene ahora crear un alias para que los correos que se envíen a <code class="language-plaintext highlighter-rouge">root</code> se envíen a nuestro correo personal.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nano /etc/aliases
<span class="nt">---</span>
root:   mariajesus
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/10.png" alt="10" /></p>

<p>Ejecutamos <code class="language-plaintext highlighter-rouge">newaliases</code> para que se actualice el archivo de alias y comprobamos que funciona correctamente:</p>

<p><img src="/assets/images/correo/correo/11.png" alt="11" /></p>

<p><img src="/assets/images/correo/correo/12.png" alt="12" /></p>

<p>Por último, creamos una redirección para que los correos que se envíen a <code class="language-plaintext highlighter-rouge">root</code> se envíen a nuestro correo personal.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nano /home/mariajesus/.forward
<span class="nt">---</span>
correo@gmail.com
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/13.png" alt="13" /></p>

<h2 id="para-asegurar-el-envío">Para asegurar el envío</h2>

<h3 id="tarea-4">Tarea 4</h3>

<p>En esta tarea, deberemos configurar el DomainKeys Identified Mail (DKIM) para que los correos que envíe nuestro servidor sean firmados digitalmente. Para ello, instalaremos el paquete <code class="language-plaintext highlighter-rouge">opendkim</code> y <code class="language-plaintext highlighter-rouge">opendkim-tools</code> y crearemos un archivo de configuración en <code class="language-plaintext highlighter-rouge">/etc/opendkim.conf</code> que tenga el siguiente contenido:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt <span class="nb">install </span>opendkim opendkim-tools <span class="nt">-y</span>
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Domain mariatec.es
Selector dkim2023
KeyFile /etc/dkimkeys/dkim2023.private
<span class="c">#Socket local:/var/opendkim/opendkim.sock</span>
Socket inet:8891@localhost
PidFile /var/opendkim/opendkim.pid
TrustAnchorFile /usr/share/dns/root.key
</code></pre></div></div>

<p>Tras esto, modificaremos el archivo <code class="language-plaintext highlighter-rouge">/etc/default/opendkim</code> para que se ejecute en el puerto 8891 y no en el socket local.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">SOCKET</span><span class="o">=</span>inet:8891@localhost
</code></pre></div></div>

<p>Y modificamos el archivo <code class="language-plaintext highlighter-rouge">/etc/postfix/main.cf</code> para señalar el modo de firma de los correos y el puerto en el que se ejecuta el servicio de <code class="language-plaintext highlighter-rouge">opendkim</code>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>milter_default_action <span class="o">=</span> accept
milter_protocol <span class="o">=</span> 2
smtpd_milters <span class="o">=</span> inet:localhost:8891
non_smtpd_milters <span class="o">=</span> <span class="nv">$smtpd_milters</span>
</code></pre></div></div>

<p>Cuando tengamos todo esto configurado, generamos la clave privada y pública para el selector <code class="language-plaintext highlighter-rouge">dkim2023</code>. También le cambiamos el propietario al usuario <code class="language-plaintext highlighter-rouge">opendkim</code> y reiniciamos los servicios.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /etc/dkimkeys
opendkim-genkey <span class="nt">-s</span> dkim2023 <span class="nt">-d</span> mariatec.es <span class="nt">-b</span> 2048
<span class="nb">chown </span>opendkim:opendkim dkim2023.private dkim2023.txt
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/14.png" alt="14" /></p>

<p>Para que postfix pueda usar la clave, deberá tener la siguiente estructura:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dkim2023._domainkey     IN      TXT     <span class="o">(</span> <span class="s2">"v=DKIM1; h=sha256; k=rsa; "</span>
          <span class="s2">"p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3gaVO68xhAlj7yNqNHEPh2zJDF+Mz5Zt9nsb54fElkvjUhAWUc+YiQ2yb+5tSo2EXjZV8LZCogkdKWkJniAmID/ZcyxZZB3XDa7nWpVJGF1JlOPXw+gJonq3Pdii945bIBR91ZcPR9KBL2TUZX0mHs1I1DlyXEALjajI5v2qbUFIVVCM6Kvv2qHB1FKhbkXozOW/ILoQr6unUp"</span>
          <span class="s2">"Y4pFGzgZBkUUWQVTHCJ/J9d2VIjN1lp1Ro3sV788PoU8Mk9piRmyW3+p1hoh6qeTqFv9QekD4jsiWBHuWM7mo3vLBoO4lzMsvcyPuAgaqsy2oEuq3RvtO23mNoqwtA5QmNGrQsBwIDAQAB"</span> <span class="o">)</span>  <span class="p">;</span> <span class="nt">-----</span> DKIM key dkim2023 <span class="k">for </span>mariatec.es
</code></pre></div></div>

<p>Y en el registro TXT del DNS colocaremos la clave pública:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">v</span><span class="o">=</span>DKIM1<span class="p">;</span> <span class="nv">h</span><span class="o">=</span>sha256<span class="p">;</span> <span class="nv">k</span><span class="o">=</span>rsa<span class="p">;</span> <span class="nv">p</span><span class="o">=</span><span class="nv">p</span><span class="o">=</span>MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3gaVO68xhAlj7yNqNHEPh2zJDF+Mz5Zt9nsb54fElkvjUhAWUc+YiQ2yb+5tSo2EXjZV8LZCogkdKWkJniAmID/ZcyxZZB3XDa7nWpVJGF1JlOPXw+gJonq3Pdii945bIBR91ZcPR9KBL2TUZX0mHs1I1DlyXEALjajI5v2qbUFIVVCM6Kvv2qHB1FKhbkXozOW/ILoQr6unUp
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/15.png" alt="15" /></p>

<p>Reiniciamos los servicios y comprobamos que funciona correctamente.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl restart opendkim postfix
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>netstat <span class="nt">-tulpn</span> | <span class="nb">grep </span>8891
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/16.png" alt="16" /></p>

<p>Como podemos ver en las siguientes capturas, en la cabecera del correo se añade la información de la firma.</p>

<p><img src="/assets/images/correo/correo/17.png" alt="17" /></p>

<p>Y en la web de <a href="https://dkimvalidator.com/">dkimvalidator</a> podemos comprobar que la firma es correcta.</p>

<p><img src="/assets/images/correo/correo/18.png" alt="18" /></p>

<h2 id="para-luchar-contra-el-spam">Para luchar contra el SPAM</h2>

<h3 id="tarea-5">Tarea 5</h3>

<p>Le ha llegado el turno a la tarea 5. En esta tarea vamos a configurar Postfix para que tenga en cuenta el registro SPF de los correos que recibe. Para ello, vamos a instalar el paquete <code class="language-plaintext highlighter-rouge">postfix-policyd-spf-python</code>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>postfix-policyd-spf-python <span class="nt">-y</span>
</code></pre></div></div>

<p>Modificaremos el archivo <code class="language-plaintext highlighter-rouge">/etc/postfix/main.cf</code> para que se ejecute el servicio de <code class="language-plaintext highlighter-rouge">policyd-spf</code> y para que se ejecute el servicio de <code class="language-plaintext highlighter-rouge">opendkim</code>. Con la siguiente sentencia le estaremos indicando a postfix para comprobar el SPF de los correos que recibe.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>policy-spf  unix  -       n       n       -       0       spawn
    <span class="nv">user</span><span class="o">=</span>policyd-spf <span class="nv">argv</span><span class="o">=</span>/usr/bin/policyd-spf
</code></pre></div></div>

<p>Reiniciamos el servicio de postfix y comprobamos que funciona correctamente.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl restart postfix

<span class="nb">tail</span> <span class="nt">-f</span> /var/log/mail.log
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/19.png" alt="19" /></p>

<h3 id="tarea-6">Tarea 6</h3>

<p>Le toca el turno a la protección contra el SPAM. Para ello, vamos a instalar el paquete <code class="language-plaintext highlighter-rouge">spamassassin</code> y habilitaremos el servicio.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>spamassassin spamc <span class="nt">-y</span>
<span class="nb">sudo </span>systemctl <span class="nb">enable</span> <span class="nt">--now</span> spamassassin
</code></pre></div></div>

<p>Modificamos el fichero <code class="language-plaintext highlighter-rouge">/etc/default/spamassassin</code> y agregaremos las líneas necesarias para que se actualice la base de datos de spamassassin.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">CRON</span><span class="o">=</span>1
</code></pre></div></div>

<p>Y en el fichero <code class="language-plaintext highlighter-rouge">/etc/postfix/master.cf</code> agregaremos la siguiente línea para que el servicio de postfix ejecute el servicio de spamassassin.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>smtp      inet  n       -       y       -       -       smtpd
  <span class="nt">-o</span> <span class="nv">content_filter</span><span class="o">=</span>spamassassin
submission inet n       -       y       -       -       smtpd
  <span class="nt">-o</span> <span class="nv">content_filter</span><span class="o">=</span>spamassassin
spamassassin unix -     n       n       -       -       pipe
  <span class="nv">user</span><span class="o">=</span>debian-spamd <span class="nv">argv</span><span class="o">=</span>/usr/bin/spamc <span class="nt">-f</span> <span class="nt">-e</span> /usr/sbin/sendmail <span class="nt">-oi</span> <span class="nt">-f</span> <span class="k">${</span><span class="nv">sender</span><span class="k">}</span> <span class="k">${</span><span class="nv">recipient</span><span class="k">}</span>
</code></pre></div></div>

<p>Y para configurar que los emails que se detecten como SPAM, reciban una etiqueta en el asunto, modificaremos el fichero <code class="language-plaintext highlighter-rouge">/etc/spamassassin/local.cf</code> y descomentamos la siguiente línea.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rewrite_header Subject <span class="k">*****</span>SPAM<span class="k">*****</span>
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/20.png" alt="20" /></p>

<p>Reiniciamos los servicios y comprobamos que funciona correctamente.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl restart postfix spamassassin
</code></pre></div></div>

<p>Comprobaremos que funciona, enviando un correo a nuestro email en nuestro VPS y comprobando que se ha etiquetado como SPAM. Por ello, usaremos <a href="https://spamassassin.apache.org/gtube/">The GTUBE</a> para enviar un correo que se detecte como SPAM.</p>

<p>Comprobando que el email se ha etiquetado como SPAM, miraremos también el log de mail para comprobar que se ha ejecutado el servicio de spamassassin.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">tail</span> <span class="nt">-f</span> /var/log/mail.log <span class="nt">-n</span> 26
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/21.png" alt="21" /></p>

<h3 id="tarea-7">Tarea 7</h3>

<p>Nuestro servidor de correo deberá tener antivirus que se encargue de detectar y eliminar los virus que se encuentren en los correos que recibe. Para ello, vamos a instalar el paquete <code class="language-plaintext highlighter-rouge">clamav</code> y habilitaremos el servicio.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt <span class="nb">install </span>clamsmtp clamav-daemon arc arj bzip2 cabextract lzop nomarch p7zip pax tnef unrar-free unzip <span class="nt">-y</span>

systemctl <span class="nb">enable</span> <span class="nt">--now</span> clamav-daemon
</code></pre></div></div>

<p>El siguiente paso el fichero <code class="language-plaintext highlighter-rouge">/etc/postfix/master.cf</code> y agregaremos la siguiente línea para que el servicio de postfix ejecute el servicio de clamav.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>scan unix -       -       n       -       16       smtp
  <span class="nt">-o</span> <span class="nv">smtp_data_done_timeout</span><span class="o">=</span>1200
  <span class="nt">-o</span> <span class="nv">smtp_send_xforward_command</span><span class="o">=</span><span class="nb">yes</span>
  <span class="nt">-o</span> <span class="nv">disable_dns_lookups</span><span class="o">=</span><span class="nb">yes
</span>127.0.0.1:10025 inet n       -       n       -       16       smtpd
  <span class="nt">-o</span> <span class="nv">content_filter</span><span class="o">=</span>
  <span class="nt">-o</span> <span class="nv">local_recipient_maps</span><span class="o">=</span>
  <span class="nt">-o</span> <span class="nv">relay_recipient_maps</span><span class="o">=</span>
  <span class="nt">-o</span> <span class="nv">smtpd_restriction_classes</span><span class="o">=</span>
  <span class="nt">-o</span> <span class="nv">smtpd_client_restrictions</span><span class="o">=</span>
  <span class="nt">-o</span> <span class="nv">smtpd_helo_restrictions</span><span class="o">=</span>
  <span class="nt">-o</span> <span class="nv">smtpd_sender_restrictions</span><span class="o">=</span>
  <span class="nt">-o</span> <span class="nv">smtpd_recipient_restrictions</span><span class="o">=</span>permit_mynetworks,reject
  <span class="nt">-o</span> <span class="nv">mynetworks_style</span><span class="o">=</span>host
  <span class="nt">-o</span> <span class="nv">smtpd_authorized_xforward_hosts</span><span class="o">=</span>127.0.0.0/8
</code></pre></div></div>

<p>Y en el fichero <code class="language-plaintext highlighter-rouge">/etc/postfix/main.cf</code> y le indicamos el socket que usará el servicio de clamav.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>content_filter <span class="o">=</span> scan:127.0.0.1:10026
</code></pre></div></div>

<p>Reconfiguramos <code class="language-plaintext highlighter-rouge">clamav-daemon</code> de forma que le indiquemos los hilos de procesador que usará y el resto de parámetros.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dpkg-reconfigure clamav-daemon
</code></pre></div></div>

<p>Y reiniciamos los servicios.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl restart postfix clamav-daemon
</code></pre></div></div>

<p><strong>NOTA</strong> : Será normal que <code class="language-plaintext highlighter-rouge">ClamAV</code> tarde un poco en arrancar, ya que tiene que actualizar la base de datos de virus.</p>

<p>Para probarlo, enviaremos un correo con <code class="language-plaintext highlighter-rouge">X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*</code> para probar que se detecta como virus.</p>

<p>Comprobando que el email se ha etiquetado como virus, miraremos también el log de mail para comprobar que se ha ejecutado el servicio de clamav.</p>

<p><img src="/assets/images/correo/correo/22.png" alt="22" /></p>

<h2 id="gestión-de-correos-desde-un-cliente">Gestión de correos desde un cliente</h2>

<h3 id="tarea-8">Tarea 8</h3>

<p>Aquí vamos a configurar el buzón de los usuarios para que puedan acceder a él desde un cliente de correo. Y para ello, el primer paso es modificar la configuración de <code class="language-plaintext highlighter-rouge">postfix</code>, en el fichero <code class="language-plaintext highlighter-rouge">/etc/postfix/main.cf</code> para que use el buzón <code class="language-plaintext highlighter-rouge">Maildir</code> añadiendo al final del fichero <code class="language-plaintext highlighter-rouge">home_mailbox = Maildir/</code>.</p>

<p>Reiniciamos el servicio de postfix y tras esto, la función <code class="language-plaintext highlighter-rouge">mail</code> dejará de funcionar, ya que no encontrará el buzón <code class="language-plaintext highlighter-rouge">Maildir</code> en el directorio <code class="language-plaintext highlighter-rouge">/var/mail</code>. Para ello, instalaremos <code class="language-plaintext highlighter-rouge">mutt</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt <span class="nb">install </span>mutt <span class="nt">-y</span>
systemctl restart postfix
</code></pre></div></div>

<p>Y configuramos <code class="language-plaintext highlighter-rouge">mutt</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">set </span><span class="nv">mbox_type</span><span class="o">=</span>Maildir
<span class="nb">set </span><span class="nv">mbox</span><span class="o">=</span><span class="s2">"~/Maildir"</span>
<span class="nb">set </span><span class="nv">folder</span><span class="o">=</span><span class="s2">"~/Maildir"</span>
<span class="nb">set </span><span class="nv">spoolfile</span><span class="o">=</span><span class="s2">"~/Maildir"</span>
<span class="nb">set </span><span class="nv">record</span><span class="o">=</span><span class="s2">"+.Sent"</span>
<span class="nb">set </span><span class="nv">postponed</span><span class="o">=</span><span class="s2">"+.Drafts"</span>
<span class="nb">set </span><span class="nv">mask</span><span class="o">=</span><span class="s2">"!^</span><span class="se">\\</span><span class="s2">.[^.]"</span>
</code></pre></div></div>

<p>Para probar que funciona, enviaremos un correo a nuestro buzón y comprobaremos que se ha recibido correctamente.</p>

<p><img src="/assets/images/correo/correo/23.png" alt="23" /></p>

<p><img src="/assets/images/correo/correo/24.png" alt="24" /></p>

<p>Realizado esto, podemos decir que tenemos un buzón de correo funcionando correctamente como <code class="language-plaintext highlighter-rouge">Maildir</code> en vez de <code class="language-plaintext highlighter-rouge">mbox</code>.</p>

<h3 id="tarea-9">Tarea 9</h3>

<p>Vamos a configurar el protocolo IMAP instalando el paquete <code class="language-plaintext highlighter-rouge">dovecot-imapd</code> y habilitaremos el servicio.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt <span class="nb">install </span>dovecot-imapd <span class="nt">-y</span>
systemctl <span class="nb">enable</span> <span class="nt">--now</span> dovecot
netstat <span class="nt">-tulpn</span> | <span class="nb">grep </span>dovecot
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/25.png" alt="25" /></p>

<p>Paramos nginx para que no interfiera con el puerto 80.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl stop nginx
</code></pre></div></div>

<p>Y generamos un certificado SSL para el servidor de correo.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>certbot certonly <span class="nt">--standalone</span> <span class="nt">-d</span> mail.mariatec.es
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/26.png" alt="26" /></p>

<p>Modificamos la configuración de <code class="language-plaintext highlighter-rouge">dovecot</code> en el fichero <code class="language-plaintext highlighter-rouge">/etc/dovecot/dovecot.conf</code> para que use el certificado SSL que hemos generado. Una vez configurado, reiniciamos el servicio y también el servicio de nginx.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssl_cert <span class="o">=</span> &lt;/etc/letsencrypt/live/mail.mariatec.es/fullchain.pem
ssl_key <span class="o">=</span> &lt;/etc/letsencrypt/live/mail.mariatec.es/privkey.pem
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/27.png" alt="27" /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl restart dovecot
systemctl restart nginx
</code></pre></div></div>

<p><strong>INCISO</strong>: Vamos a realizar primero la configuración de postfix para que mande correos desde un cliente remoto, ya que si no, no podremos probar el servicio de IMAP. Después de esto, instalaremos un webmail.</p>

<h3 id="tarea-11">Tarea 11</h3>

<p>Los mismos certificados que hemos generado antes para cifrar los emails enviados y recibidos. Para ello, modificamos el fichero <code class="language-plaintext highlighter-rouge">/etc/postfix/main.cf</code> y añadimos las siguientes líneas:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>smtpd_tls_cert_file <span class="o">=</span> /etc/letsencrypt/live/mail.mariatec.es/fullchain.pem
smtpd_tls_key_file <span class="o">=</span> /etc/letsencrypt/live/mail.mariatec.es/privkey.pem

smtpd_sasl_auth_enable <span class="o">=</span> <span class="nb">yes
</span>smtpd_sasl_type <span class="o">=</span> dovecot
smtpd_sasl_path <span class="o">=</span> private/auth
smtpd_sasl_authenticated_header <span class="o">=</span> <span class="nb">yes
</span>broken_sasl_auth_clients <span class="o">=</span> <span class="nb">yes</span>
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/28.png" alt="28" /></p>

<p>Acto seguido, configuraremos el fichero <code class="language-plaintext highlighter-rouge">master.cf</code> y modificamos la directiva submission para que use el puerto 587 y el fichero <code class="language-plaintext highlighter-rouge">smtpd.conf</code> para que use el puerto 465.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
submission inet n       -       y       -       -       smtpd
  <span class="nt">-o</span> <span class="nv">content_filter</span><span class="o">=</span>spamassassin
  <span class="nt">-o</span> <span class="nv">syslog_name</span><span class="o">=</span>postfix/submission
  <span class="nt">-o</span> <span class="nv">smtpd_tls_security_level</span><span class="o">=</span>encrypt
  <span class="nt">-o</span> <span class="nv">smtpd_sasl_auth_enable</span><span class="o">=</span><span class="nb">yes</span>
  <span class="nt">-o</span> <span class="nv">smtpd_tls_auth_only</span><span class="o">=</span><span class="nb">yes</span>
  <span class="nt">-o</span> <span class="nv">smtpd_reject_unlisted_recipient</span><span class="o">=</span>no
  <span class="nt">-o</span> <span class="nv">smtpd_client_restrictions</span><span class="o">=</span><span class="nv">$mua_client_restrictions</span>
  <span class="nt">-o</span> <span class="nv">smtpd_helo_restrictions</span><span class="o">=</span><span class="nv">$mua_helo_restrictions</span>
  <span class="nt">-o</span> <span class="nv">smtpd_sender_restrictions</span><span class="o">=</span><span class="nv">$mua_sender_restrictions</span>
  <span class="nt">-o</span> <span class="nv">smtpd_recipient_restrictions</span><span class="o">=</span>
  <span class="nt">-o</span> <span class="nv">smtpd_relay_restrictions</span><span class="o">=</span>permit_sasl_authenticated,reject
  <span class="nt">-o</span> <span class="nv">milter_macro_daemon_name</span><span class="o">=</span>ORIGINATING

smtps     inet  n       -       y       -       -       smtpd
  <span class="nt">-o</span> <span class="nv">syslog_name</span><span class="o">=</span>postfix/smtps
  <span class="nt">-o</span> <span class="nv">smtpd_tls_wrappermode</span><span class="o">=</span><span class="nb">yes</span>
  <span class="nt">-o</span> <span class="nv">smtpd_sasl_auth_enable</span><span class="o">=</span><span class="nb">yes</span>
  <span class="nt">-o</span> <span class="nv">smtpd_reject_unlisted_recipient</span><span class="o">=</span>no
  <span class="nt">-o</span> <span class="nv">smtpd_client_restrictions</span><span class="o">=</span><span class="nv">$mua_client_restrictions</span>
  <span class="nt">-o</span> <span class="nv">smtpd_helo_restrictions</span><span class="o">=</span><span class="nv">$mua_helo_restrictions</span>
  <span class="nt">-o</span> <span class="nv">smtpd_sender_restrictions</span><span class="o">=</span><span class="nv">$mua_sender_restrictions</span>
  <span class="nt">-o</span> <span class="nv">smtpd_recipient_restrictions</span><span class="o">=</span>
  <span class="nt">-o</span> <span class="nv">smtpd_relay_restrictions</span><span class="o">=</span>permit_sasl_authenticated,reject
  <span class="nt">-o</span> <span class="nv">milter_macro_daemon_name</span><span class="o">=</span>ORIGINATING
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/29.png" alt="29" /></p>

<p>Ahora, a <code class="language-plaintext highlighter-rouge">dovecot</code>, le indicamos qué debe hacer para autenticarse. Lo haremos en el fichero <code class="language-plaintext highlighter-rouge">/etc/dovecot/conf.d/10-master.conf</code> y añadimos las siguientes líneas:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>service auth <span class="o">{</span>
  ...
  <span class="c"># Postfix smtp-auth</span>
  unix_listener /var/spool/postfix/private/auth <span class="o">{</span>
    mode <span class="o">=</span> 0666
  <span class="o">}</span>
  ...
<span class="o">}</span>
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/30.png" alt="30" /></p>

<p>Reiniciamos los servicios y comprobamos que todo funciona correctamente. Deberemos abrir los puertos 465 y 993 en el firewall de nuestro VPS.</p>

<p>Para comprobar que funciona correctamente, he usado <code class="language-plaintext highlighter-rouge">Thunderbird</code>, configuramos el correo y comprobamos que funciona correctamente.</p>

<p><img src="/assets/images/correo/correo/31.png" alt="31" /></p>

<p>Ya podemos decir que los correos están sincronizados correctamente entre el servidor y el cliente. También probaremos que, desde <code class="language-plaintext highlighter-rouge">Thunderbird</code>, podemos enviar un correo a mi cuenta de gmail y que llega correctamente.</p>

<p><img src="/assets/images/correo/correo/32.png" alt="32" /></p>

<p>También vamos a probar que podemos responder al email y que se sincronizan correctamente los emails de mi servidor y los emailsdel cliente de correo.</p>

<p><img src="/assets/images/correo/correo/33.png" alt="33" /></p>

<h3 id="tarea-10">Tarea 10</h3>

<p>Ha llegado la hora de instalar un webmail. Para ello, vamos a instalar <code class="language-plaintext highlighter-rouge">Roundcube</code>. Para ello, prepararemos el VPS para que pueda instalar <code class="language-plaintext highlighter-rouge">Roundcube</code> y sus dependencias.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt <span class="nb">install </span>docker.io
</code></pre></div></div>

<p>Agregaremos un registro CNAME en nuestro DNS para que el dominio <code class="language-plaintext highlighter-rouge">webmail.mariatec.es</code> apunte a la IP del servidor.</p>

<p>🔲 webmail.mariatec.es     CNAME      mariatec.es</p>

<p>Le toca el turno a roundcube y a su configuración, y para eso empezaremos por crear un directorio en el depositaremos los ficheros de configuración de <code class="language-plaintext highlighter-rouge">Roundcube</code> y lo estrenaremos creando el fichero <code class="language-plaintext highlighter-rouge">custom.inc.php</code> que contendrá la configuración de la base de datos.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> /root/config-roundcube

nano /root/configs-roundcube/custom.inc.php
</code></pre></div></div>

<p>Dentro del fichero, añadiremos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php
<span class="nv">$config</span><span class="o">[</span><span class="s1">'mail_domain'</span><span class="o">]</span> <span class="o">=</span> array<span class="o">(</span>
    <span class="s1">'mail.mariatec.es'</span> <span class="o">=&gt;</span> <span class="s1">'mariatec.es'</span>
<span class="o">)</span><span class="p">;</span>
?&gt;
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/34.png" alt="34" /></p>

<p>Echamos a andar el contenedor de docker donde tenemos la aplicación de <code class="language-plaintext highlighter-rouge">Roundcube</code> y le pasamos los parámetros necesarios para que funcione correctamente.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-v</span> /root/config-roundcube/:/var/roundcube/config/ <span class="nt">-e</span> <span class="nv">ROUNDCUBEMAIL_DEFAULT_HOST</span><span class="o">=</span>ssl://mail.mariatec.es <span class="nt">-e</span> <span class="nv">ROUNDCUBEMAIL_SMTP_SERVER</span><span class="o">=</span>ssl://mail.mariatec.es <span class="nt">-e</span> <span class="nv">ROUNDCUBEMAIL_SMTP_PORT</span><span class="o">=</span>465 <span class="nt">-e</span> <span class="nv">ROUNDCUBEMAIL_DEFAULT_PORT</span><span class="o">=</span>993 <span class="nt">-p</span> 8001:80 <span class="nt">-d</span> roundcube/roundcubemail
</code></pre></div></div>

<p>Y en la siguiente imagen podemos ver como el contenedor se ha levantado correctamente.</p>

<p><img src="/assets/images/correo/correo/35.png" alt="35" /></p>

<p>Paramos de nuevo <code class="language-plaintext highlighter-rouge">Nginx</code> y creamos un certificado para el dominio <code class="language-plaintext highlighter-rouge">webmail.mariatec.es</code> y lo instalamos en el servidor.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl stop nginx

certbot certonly <span class="nt">--standalone</span> <span class="nt">-d</span> webmail.mariatec.es
</code></pre></div></div>

<p>Ya terminada toda la configuración anterior, tendremos que crear un VirtualHost para <code class="language-plaintext highlighter-rouge">Nginx</code> que redirija las peticiones a <code class="language-plaintext highlighter-rouge">Roundcube</code> y que esté protegido por <code class="language-plaintext highlighter-rouge">Let's Encrypt</code>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nano /etc/nginx/sites-available/webmail.mariatec.es
</code></pre></div></div>

<p>Dentro del fichero, añadiremos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>server <span class="o">{</span>
        listen 80<span class="p">;</span>
        listen <span class="o">[</span>::]:80<span class="p">;</span>

        server_name webmail.mariatec.es<span class="p">;</span>

        <span class="k">return </span>301 https://<span class="nv">$host$request_uri</span><span class="p">;</span>
<span class="o">}</span>

server <span class="o">{</span>
        listen 443 ssl http2<span class="p">;</span>
        listen <span class="o">[</span>::]:443 ssl http2<span class="p">;</span>

        ssl    on<span class="p">;</span>
        ssl_certificate /etc/letsencrypt/live/webmail.mariatec.es/fullchain.pem<span class="p">;</span>
        ssl_certificate_key     /etc/letsencrypt/live/webmail.mariatec.es/privkey.pem<span class="p">;</span>

        index index.html index.php index.htm index.nginx-debian.html<span class="p">;</span>

        server_name webmail.mariatec.es<span class="p">;</span>

        location / <span class="o">{</span>
                proxy_pass http://localhost:8001<span class="p">;</span>
                include proxy_params<span class="p">;</span>
        <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>Para que esté habilitado el VirtualHost, tendremos que crear un enlace simbólico en <code class="language-plaintext highlighter-rouge">/etc/nginx/sites-enabled/</code> y reiniciar el servicio de <code class="language-plaintext highlighter-rouge">Nginx</code>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">ln</span> <span class="nt">-s</span> /etc/nginx/sites-available/webmail.mariatec.es /etc/nginx/sites-enabled/webmail.mariatec.es

systemctl restart nginx
</code></pre></div></div>

<p><img src="/assets/images/correo/correo/36.png" alt="36" /></p>

<p>Ahora, ya podemos acceder a <code class="language-plaintext highlighter-rouge">Roundcube</code> desde el navegador.</p>

<p><img src="/assets/images/correo/correo/37.png" alt="37" /></p>

<p><img src="/assets/images/correo/correo/38.png" alt="38" /></p>

<p>Hacemos una prueba de envío de correo desde <code class="language-plaintext highlighter-rouge">Roundcube</code> y comprobamos que funciona correctamente.</p>

<p><img src="/assets/images/correo/correo/39.png" alt="39" /></p>

<p>En gmail podemos verificar que el correo ha llegado correctamente.</p>

<p><img src="/assets/images/correo/correo/40.png" alt="40" /></p>

<h3 id="tarea-12">Tarea 12</h3>

<p>En la tarea 10 ya hemos comprobado que ya hemos podido enviar y recibir correos desde el servidor de correo. Ahora, vamos a comprobar que el servidor de correo funciona correctamente y que podemos enviar y recibir correos desde el servidor.</p>

<h2 id="comprobación-final">Comprobación final</h2>

<h3 id="tarea-13">Tarea 13</h3>

<p>Última tarea, comprobación final. Para ello, vamos a comprobar que el servidor de correo funciona correctamente y que podemos enviar y recibir correos desde el servidor. Comprobaremos con un correo generado por <a href="https://www.mail-tester.com/">mail-tester.com</a> y que, con la puntuación que nos da, podemos ver que el servidor de correo funciona correctamente.</p>

<p>Para ello, modificaremos nuestro DNS y añadiremos un registro TXT con el valor que nos da <code class="language-plaintext highlighter-rouge">mail-tester.com</code> y que nos permitirá que el servidor de correo sea verificado por <code class="language-plaintext highlighter-rouge">mail-tester.com</code>.</p>

<p>🔲 _dmarc.mariatec.es     TXT      v=DMARC1; p=none;</p>

<p><img src="/assets/images/correo/correo/41.png" alt="41" /></p>

<p><img src="/assets/images/correo/correo/42.png" alt="42" /></p>]]></content><author><name></name></author><category term="HLC+SRI" /><summary type="html"><![CDATA[Introducción]]></summary></entry><entry><title type="html">Taller de Almacenamiento - Introducción a iSCSI</title><link href="/hlc+sri/2023/01/22/iscsi.html" rel="alternate" type="text/html" title="Taller de Almacenamiento - Introducción a iSCSI" /><published>2023-01-22T12:47:17+01:00</published><updated>2023-01-22T12:47:17+01:00</updated><id>/hlc+sri/2023/01/22/iscsi</id><content type="html" xml:base="/hlc+sri/2023/01/22/iscsi.html"><![CDATA[<h2 id="introducción-a-iscsi">Introducción a iSCSI</h2>

<p>iSCSI es un protocolo de red que permite compartir almacenamiento entre servidores. iSCSI es una abreviatura de Internet Small Computer System Interface. Sirve para conectar servidores y almacenamiento de forma que se pueda compartir el almacenamiento entre ellos. Es una abreviatura de Internet Small Computer System Interface.</p>

<p>En este Taller vamos a configurar un servidor iSCSI y un cliente iSCSI. Para ello, vamos a usar un <a href="https://fp.josedomingo.org/sri2223/7_almacenamiento/files/iscsi/Vagrantfile">vagrantfile</a></p>

<h2 id="configuración-del-servidor-iscsi">Configuración del servidor iSCSI</h2>

<p>Primero instalaremos una herramienta que nos permitirá poder utilizar iSCSI, que es <code class="language-plaintext highlighter-rouge">tgt</code>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt-get <span class="nb">install </span>tgt
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/1.png" alt="1" /></p>

<p>Una vez finalizada la instalación, empezaremos con la creación del target para debian, que para ello deberemos crear un archivo de configuración:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nano /etc/tgt/conf.d/target1.conf
</code></pre></div></div>

<p>Y dentro de este archivo, pondremos lo siguiente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;target iqn.2023-01-target1&gt;
    backing-store /dev/vdb
&lt;/target&gt;
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/2.png" alt="2" /></p>

<p>Vamos a realizarlo en un solo LUN, que es lo mismo que en un solo disco duro. Para ello, vamos a reiniciar el servicio y comprobar que se ha creado correctamente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl restart tgt
<span class="nt">---</span>
<span class="nb">sudo </span>tgtadm <span class="nt">--mode</span> target <span class="nt">--op</span> show
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/3.png" alt="3" /></p>

<h2 id="configuración-del-cliente-iscsi">Configuración del cliente iSCSI</h2>

<p>Para configurar el cliente iSCSI, vamos a instalar el paquete <code class="language-plaintext highlighter-rouge">open-iscsi</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get <span class="nb">install </span>open-iscsi
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/4.png" alt="4" /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>iscsiadm <span class="nt">--mode</span> discovery <span class="nt">--type</span> sendtargets <span class="nt">--portal</span> 192.168.121.117
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/5.png" alt="5" /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>iscsiadm <span class="nt">--mode</span> node <span class="nt">-T</span> iqn.2023-01-target1 <span class="nt">--portal</span> 192.168.121.117 <span class="nt">-l</span>
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/6.png" alt="6" /></p>

<p><strong>NOTA:</strong> Para desmontar el target, utilizaremos la opción <code class="language-plaintext highlighter-rouge">-u</code> en el comando anterior (<code class="language-plaintext highlighter-rouge">sudo iscsiadm --mode node -T iqn.2023-01-target1 --portal 192.168.121.117 -u</code>).</p>

<p>Una vez instalado, podemos comprobar la conexión del target:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>journalctl <span class="nt">-k</span> <span class="nt">-f</span>
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/7.png" alt="7" /></p>

<h2 id="formateo-del-disco">Formateo del disco</h2>

<p>Podemos hacer uso del nuevo dispositivo que hemos creado como si se tratase de un disco duro más. Para ello, vamos a formatearlo:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mkfs.ext4 /dev/sda
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/8.png" alt="8" /></p>

<p>Una vez realizado elformateo, comprobaremos que se ha creado correctamente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>lsblk <span class="nt">-f</span>
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/9.png" alt="9" /></p>

<p>El siguiente paso será montarlo, para poder escribir datos en él:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mount <span class="nt">-t</span> ext4 /dev/sda /mnt
</code></pre></div></div>

<p>Y como podemos comprobar en la siguiente imagen, podemos ver que está montado correctamente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>lsblk <span class="nt">-f</span>
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/10.png" alt="10" /></p>

<p>Para comprobar que podemos escribir en él, vamos a crear un archivo de texto:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo echo</span> <span class="s2">"Prueba de funcionamiento iSCSI."</span> <span class="o">&gt;</span> /mnt/prueba.txt
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/11.png" alt="11" /></p>

<h2 id="montaje-automático">Montaje automático</h2>

<p>Para que el disco se monte automáticamente, vamos a cargar el target en el arranque del sistema. Para ello, ejecutaremos el siguiente comando:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>iscsiadm <span class="nt">-m</span> discovery <span class="nt">-T</span> iqn.2023-01-target1 <span class="nt">-p</span> 192.168.121.117 <span class="nt">-u</span>
<span class="nb">sudo </span>iscsiadm <span class="nt">-m</span> discovery <span class="nt">-T</span> iqn.2023-01-target1 <span class="nt">-o</span> update <span class="nt">-n</span> node.startup <span class="nt">-v</span> automatic
</code></pre></div></div>

<p>Modificaremos fichero <code class="language-plaintext highlighter-rouge">/etc/iscsi/iscsid.conf</code> y añadiremos la siguiente línea:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>node.startup <span class="o">=</span> automatic
</code></pre></div></div>

<p>Y reiniciaremos el servicio:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl restart iscsid.service
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/12.png" alt="12" /></p>

<p>Para habilitarlo de forma permanente, ejecutaremos el siguiente comando:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl <span class="nb">enable </span>iscsid open-iscsi.service
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/13.png" alt="13" /></p>

<p>El siguiente paso que realizaremos será crear una unidad de systemd para que se monte el disco automáticamente. Para ello, crearemos un directorio donde crearemos las unidades iSCSI:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> /media/iscsi
</code></pre></div></div>

<p>Tras esto, crearemos el archivo de configuración de la unidad en <code class="language-plaintext highlighter-rouge">/etc/systemd/system/media-target1-iscsi.mount</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>Unit]
<span class="nv">Description</span><span class="o">=</span>Mount iSCSI target1
<span class="nv">Requires</span><span class="o">=</span>network-online.target
<span class="nv">After</span><span class="o">=</span>network-online.target, iscsid.service

<span class="o">[</span>Mount]
<span class="nv">What</span><span class="o">=</span>/dev/disk/by-uuid/0ec438bc-620e-4bde-b8ca-d880b5d5358c
<span class="nv">Where</span><span class="o">=</span>/media/iscsi/target1
<span class="nv">Type</span><span class="o">=</span>ext4
<span class="nv">Options</span><span class="o">=</span>defaults

<span class="o">[</span>Install]
<span class="nv">WantedBy</span><span class="o">=</span>multi-user.target
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/14.png" alt="14" /></p>

<p><strong>NOTA:</strong> El nombre del fichero debe ser la ruta completa del directorio donde se montará el disco, pero separado por guiones. Por ejemplo, si queremos montar el disco en <code class="language-plaintext highlighter-rouge">/mnt/target1</code>, el nombre del fichero será <code class="language-plaintext highlighter-rouge">/etc/systemd/system/mnt-target1.mount</code>.</p>

<p>Reiniciaremos los demonios:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl daemon-reload
</code></pre></div></div>

<p>Habilitaremos la unidad:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl <span class="nb">enable </span>media-iscsi-target1.mount
</code></pre></div></div>

<p>Y por último, la iniciamos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl start media-iscsi-target1.mount
</code></pre></div></div>

<p>Como podemos comprobar en la siguiente imagen, se ha montado correctamente:</p>

<p><img src="/assets/images/almacenamiento/taller2/15.png" alt="15" /></p>

<p>Y si reiniciamos la máquina, se montará automáticamente:</p>

<p><img src="/assets/images/almacenamiento/taller2/15-1.png" alt="15-1" /></p>

<h2 id="creamos-un-target-para-windows">Creamos un target para Windows</h2>

<p>Para este punto, vamos a realizar los mismos pasos que para las configuraciones anteriores, pero en este caso, vamos a crear un target con 2 LUN y autenticación por CHAP.</p>

<ul>
  <li>Creamos el fichero de configuración:</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nano /etc/tgt/conf.d/target2.conf
<span class="nt">---</span>

&lt;target iqn.2023-01-target2&gt;
    backing-store /dev/vdc
    backing-store /dev/vdd
    incominguser maria maria32061164s
&lt;/target&gt;
</code></pre></div></div>

<p><strong>NOTA:</strong> La contraseña debe de tener entre 12 y 16 caracteres para que no se error.</p>

<p><img src="/assets/images/almacenamiento/taller2/16.png" alt="16" /></p>

<ul>
  <li>Reiniciamos el servicio:</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl restart tgt
</code></pre></div></div>

<ul>
  <li>Comprobamos que se ha creado correctamente:</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tgtadm <span class="nt">--mode</span> target <span class="nt">--op</span> show
</code></pre></div></div>

<p><img src="/assets/images/almacenamiento/taller2/17.png" alt="17" /></p>

<h3 id="cliente-windows">Cliente Windows</h3>

<p>En la barra de búsqueda de Windows, escribimos <code class="language-plaintext highlighter-rouge">iSCSI</code> y seleccionamos la opción <code class="language-plaintext highlighter-rouge">Iniciador iSCSI</code>. Una vez seleccionado nos aparecerá la siguiente ventana:</p>

<p><img src="/assets/images/almacenamiento/taller2/18.png" alt="18" /></p>

<p>Para poder conectar el target desde Windows, nos vamos a <code class="language-plaintext highlighter-rouge">Inicio</code> → <code class="language-plaintext highlighter-rouge">Buscador iSCSI</code> → <code class="language-plaintext highlighter-rouge">Seleccionar "Iniciador iSCSI"</code> → <code class="language-plaintext highlighter-rouge">Destinos</code>. En esta subpestaña, introducimos los datos del servidor, pulsamos actualizar y se nos mostrarán los targets disponibles. En nuestro caso, seleccionaremos el target <code class="language-plaintext highlighter-rouge">iqn.2023-01-target2</code> y le daremos a <code class="language-plaintext highlighter-rouge">Conectar</code>.</p>

<p><img src="/assets/images/almacenamiento/taller2/19.png" alt="19" /></p>

<p>Tras esto, nos aparecerá una ventana de autenticación, donde deberemos introducir las credenciales que hemos configurado en el target. En nuestro caso, <code class="language-plaintext highlighter-rouge">maria</code> y <code class="language-plaintext highlighter-rouge">maria32061164s</code>.</p>

<p><img src="/assets/images/almacenamiento/taller2/20.png" alt="20" /></p>

<p>Y como podemos ver en la siguiente imagen, se ha conectado correctamente.</p>

<p><img src="/assets/images/almacenamiento/taller2/21.png" alt="21" /></p>

<h3 id="formateo-y-iso-de-la-unidad-iscsi-desde-windows">Formateo y iso de la unidad iSCSI desde Windows</h3>

<p>Nos dirigimos de nuevo a la barra de búsqueda de Windows y escribimos <code class="language-plaintext highlighter-rouge">Administración de discos</code>. Una vez seleccionado, nos aparecerá la siguiente ventana:</p>

<p><img src="/assets/images/almacenamiento/taller2/22.png" alt="22" /></p>

<p>En la ventana de <code class="language-plaintext highlighter-rouge">Inicializar disco</code> donde aparecerán los dos discos que hemos configurado en el target. Seleccionaremos los dos y le daremos a <code class="language-plaintext highlighter-rouge">Aceptar</code>.</p>

<p>Nos aparecen los discos sin formato, por lo que, en la barra superior de la ventana, seleccionamos <code class="language-plaintext highlighter-rouge">Acción</code> → <code class="language-plaintext highlighter-rouge">Añadir volumen simple</code>. Seleccionaremos el formato NTFS y le daremos a <code class="language-plaintext highlighter-rouge">Siguiente</code>.  En la siguiente ventana, le daremos a <code class="language-plaintext highlighter-rouge">Siguiente</code> y en la siguiente, a <code class="language-plaintext highlighter-rouge">Finalizar</code>.</p>

<p><img src="/assets/images/almacenamiento/taller2/23.png" alt="23" /></p>

<p>Tras finalizar, podemos ver que se han creado dos unidades de disco, una para cada LUN.</p>

<p><img src="/assets/images/almacenamiento/taller2/24.png" alt="24" /></p>

<p>Como podemos comprobar finalmente, ambos discos se han formateado correctamente y podemos acceder a ellos desde Windows.</p>

<p><img src="/assets/images/almacenamiento/taller2/25.png" alt="25" /></p>]]></content><author><name></name></author><category term="HLC+SRI" /><summary type="html"><![CDATA[Introducción a iSCSI]]></summary></entry><entry><title type="html">VPN sitio a sitio con WireGuard</title><link href="/seguridad/2023/01/13/vpn-d.html" rel="alternate" type="text/html" title="VPN sitio a sitio con WireGuard" /><published>2023-01-13T12:47:17+01:00</published><updated>2023-01-13T12:47:17+01:00</updated><id>/seguridad/2023/01/13/vpn-d</id><content type="html" xml:base="/seguridad/2023/01/13/vpn-d.html"><![CDATA[<h2 id="introducción">Introducción</h2>

<p>En este post vamos a configurar una VPN site to site con wireguard. Para ello vamos a hacer uso de máquinas vagrant para montar el escenario.</p>

<h2 id="escenario">Escenario</h2>

<p>Vamos a dividir el escenario en dos, por una parte, un escenario que actuará de servidor:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Vagrant.configure<span class="o">(</span><span class="s2">"2"</span><span class="o">)</span> <span class="k">do</span> |config|
    config.vm.provider :libvirt <span class="k">do</span> |libvirt|
        libvirt.memory <span class="o">=</span> 1024
    end
    config.vm.define :nodo1 <span class="k">do</span> |nodo1|
      nodo1.vm.box <span class="o">=</span> <span class="s2">"debian/bullseye64"</span>
      nodo1.vm.hostname <span class="o">=</span> <span class="s2">"Servidor"</span>
      nodo1.vm.synced_folder <span class="s2">"."</span>, <span class="s2">"/vagrant"</span>, disabled: <span class="nb">true
      </span>nodo1.vm.network :private_network,
        :libvirt__network_name <span class="o">=&gt;</span> <span class="s2">"privadavpn"</span>,
        :libvirt__dhcp_enabled <span class="o">=&gt;</span> <span class="nb">false</span>,
        :ip <span class="o">=&gt;</span> <span class="s2">"172.30.0.10"</span>,
        :netmask <span class="o">=&gt;</span> <span class="s2">"255.255.255.0"</span>,
        :libvirt__forward_mode <span class="o">=&gt;</span> <span class="s2">"veryisolated"</span>
    end
    config.vm.define :nodo2 <span class="k">do</span> |nodo2|
      nodo2.vm.synced_folder <span class="s2">"."</span>, <span class="s2">"/vagrant"</span>, disabled: <span class="nb">true
      </span>nodo2.vm.box <span class="o">=</span> <span class="s2">"debian/bullseye64"</span>
      nodo2.vm.hostname <span class="o">=</span> <span class="s2">"Cliente"</span>
      nodo2.vm.network :private_network,
        :libvirt__network_name <span class="o">=&gt;</span> <span class="s2">"privadavpn"</span>,
        :libvirt__dhcp_enabled <span class="o">=&gt;</span> <span class="nb">false</span>,
        :ip <span class="o">=&gt;</span> <span class="s2">"172.30.0.11"</span>,
        :netmask <span class="o">=&gt;</span> <span class="s2">"255.255.255.0"</span>,
        :libvirt__forward_mode <span class="o">=&gt;</span> <span class="s2">"veryisolated"</span>
    end
end
</code></pre></div></div>

<p>Y por otra parte, un escenario que actuará de cliente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Vagrant.configure<span class="o">(</span><span class="s2">"2"</span><span class="o">)</span> <span class="k">do</span> |config|
    config.vm.provider :libvirt <span class="k">do</span> |libvirt|
        libvirt.memory <span class="o">=</span> 1024
    end
    config.vm.define :nodo1 <span class="k">do</span> |nodo1|
      nodo1.vm.box <span class="o">=</span> <span class="s2">"debian/bullseye64"</span>
      nodo1.vm.hostname <span class="o">=</span> <span class="s2">"Servidor2"</span>
      nodo1.vm.synced_folder <span class="s2">"."</span>, <span class="s2">"/vagrant"</span>, disabled: <span class="nb">true
      </span>nodo1.vm.network :private_network,
        :libvirt__network_name <span class="o">=&gt;</span> <span class="s2">"privadvpn2"</span>,
        :libvirt__dhcp_enabled <span class="o">=&gt;</span> <span class="nb">false</span>,
        :ip <span class="o">=&gt;</span> <span class="s2">"172.20.0.10"</span>,
        :netmask <span class="o">=&gt;</span> <span class="s2">"255.255.255.0"</span>,
        :libvirt__forward_mode <span class="o">=&gt;</span> <span class="s2">"veryisolated"</span>
    end
    config.vm.define :nodo2 <span class="k">do</span> |nodo2|
      nodo2.vm.synced_folder <span class="s2">"."</span>, <span class="s2">"/vagrant"</span>, disabled: <span class="nb">true
      </span>nodo2.vm.box <span class="o">=</span> <span class="s2">"debian/bullseye64"</span>
      nodo2.vm.hostname <span class="o">=</span> <span class="s2">"Cliente2"</span>
      nodo2.vm.network :private_network,
        :libvirt__network_name <span class="o">=&gt;</span> <span class="s2">"privadvpn2"</span>,
        :libvirt__dhcp_enabled <span class="o">=&gt;</span> <span class="nb">false</span>,
        :ip <span class="o">=&gt;</span> <span class="s2">"172.20.0.11"</span>,
        :netmask <span class="o">=&gt;</span> <span class="s2">"255.255.255.0"</span>,
        :libvirt__forward_mode <span class="o">=&gt;</span> <span class="s2">"veryisolated"</span>
     end
end
</code></pre></div></div>

<p>Comenzaremos cambiando las rutas por defecto en las máquinas <code class="language-plaintext highlighter-rouge">cliente1</code> y <code class="language-plaintext highlighter-rouge">cliente2</code> para que se dirijan a la máquina <code class="language-plaintext highlighter-rouge">servidor1</code> y <code class="language-plaintext highlighter-rouge">servidor2</code> respectivamente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#cliente1</span>
ip r del default
ip r add default via 172.30.0.10

<span class="c">#cliente2</span>
ip r del default
ip r add default via 172.20.0.10
</code></pre></div></div>

<h2 id="configuración-del-servidor-1">Configuración del servidor 1</h2>

<p>Instalaremos wireguard en el <code class="language-plaintext highlighter-rouge">servidor1</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt <span class="nb">install </span>wireguard
</code></pre></div></div>

<p>Y activamos el bit de forwarding en el kernel:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo </span>1 <span class="o">&gt;</span> /proc/sys/net/ipv4/ip_forward
</code></pre></div></div>

<p>Tras ello, generaremos el par de claves pública y privada para el servidor:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wg genkey | <span class="nb">tee </span>serverprivate | wg pubkey <span class="o">&gt;</span> serverpublic
</code></pre></div></div>

<p>Ya obtenidas, crearemos el fichero de configuración del servidor:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nano wg0.conf
</code></pre></div></div>

<p>Y añadiremos lo siguiente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>Interface]
Address <span class="o">=</span> 10.99.99.1
PrivateKey <span class="o">=</span> IHIpGRRZZ/GPIHCL8d9K+Ukd3hcav2Cki9MmOIf5Xns<span class="o">=</span>
ListenPort <span class="o">=</span> 51820
</code></pre></div></div>

<p>Levantamos el servicio y comprobamos que está funcionando correctamente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wg-quick up wg0
wg
</code></pre></div></div>

<p><img src="/assets/images/vpn/D/1.png" alt="1" /></p>

<h2 id="configuración-del-servidor-2">Configuración del servidor 2</h2>

<p>Instalaremos wireguard en el <code class="language-plaintext highlighter-rouge">servidor2</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt <span class="nb">install </span>wireguard
</code></pre></div></div>

<p>Y activamos el bit de forwarding en el kernel:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo </span>1 <span class="o">&gt;</span> /proc/sys/net/ipv4/ip_forward
</code></pre></div></div>

<p>Tras ello, generaremos el par de claves pública y privada para el servidor:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wg genkey | <span class="nb">tee </span>clientprivate | wg pubkey <span class="o">&gt;</span> clientpublic
</code></pre></div></div>

<p>Ya obtenidas, crearemos el fichero de configuración del servidor:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nano wg0.conf
</code></pre></div></div>

<p>Y añadiremos lo siguiente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>Interface]
Address <span class="o">=</span> 10.99.99.2 
<span class="c"># Clave privada del servidor</span>
PrivateKey <span class="o">=</span> yO6u4QrwRwHef6WfPkZlcE6k/FET8ZnhcH2JUpp4VGI<span class="o">=</span>
ListenPort <span class="o">=</span> 51820

<span class="o">[</span>Peer]
<span class="c"># Clave pública del cliente</span>
PublicKey <span class="o">=</span> <span class="nv">FzKmyNQaz9UdnkB4J0oH6WoPAp2XRP4ZerqfZM5k0h4</span><span class="o">=</span>
AllowedIPs <span class="o">=</span> 0.0.0.0/0
Endpoint <span class="o">=</span> 192.168.121.98:51820
</code></pre></div></div>

<p>Levantamos el servicio y comprobamos que está funcionando correctamente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wg-quick up wg0
wg
</code></pre></div></div>

<p><img src="/assets/images/vpn/D/2.png" alt="2" /></p>

<h2 id="comprobación-de-la-conexión">Comprobación de la conexión</h2>

<p>Para comprobar que la conexión funciona correctamente, ejecutaremos el comando <code class="language-plaintext highlighter-rouge">ping</code> desde el <code class="language-plaintext highlighter-rouge">cliente1</code> hacia el <code class="language-plaintext highlighter-rouge">cliente2</code>:</p>

<p><img src="/assets/images/vpn/D/3.png" alt="3" /></p>

<p><img src="/assets/images/vpn/D/4.png" alt="4" /></p>

<h2 id="comparando-con-openvpn">Comparando con OpenVPN</h2>

<p>Tras haber realizado el mismo escenario con OpenVPN, hemos obtenido los siguientes resultados:</p>
<ul>
  <li>El tiempo de conexión es mucho mayor en OpenVPN que en Wireguard.</li>
  <li>El ancho de banda es mucho mayor en Wireguard que en OpenVPN.</li>
  <li>El consumo de CPU es mucho menor en Wireguard que en OpenVPN.</li>
</ul>

<p>Todo esto podemos traducirlo en que Wireguard es mucho más rápido y eficiente que OpenVPN. Además, Wireguard es mucho más sencillo de configurar que OpenVPN.</p>

<p>Es cierto que Wiereguard no es tan seguro como OpenVPN, pero para la mayoría de los usuarios, la seguridad no es un problema. Además, Wireguard está en constante desarrollo y se espera que en un futuro sea mucho más seguro que OpenVPN.</p>

<p>Además de su seguridad, OpenVPN tiene una gran ventaja sobre Wireguard: es multiplataforma. Esto quiere decir que podemos utilizar OpenVPN en cualquier sistema operativo, mientras que Wireguard solo está disponible para Linux.</p>

<p>En resumen, Wireguar es una muy buena alternativa frente a OpenVPN y se espera que en un futuro de bastante prontitud, Wireguard se convierta en la VPN por defecto de Linux. Es de facil configuración, y es mucho mas eficiente que OpenVPN en cuanto a rendimiento y consumo de recursos.</p>]]></content><author><name></name></author><category term="SEGURIDAD" /><summary type="html"><![CDATA[Introducción]]></summary></entry><entry><title type="html">VPN de acceso remoto con WireGuard (Windows, Linux, Android)</title><link href="/seguridad/2023/01/12/vpn-c.html" rel="alternate" type="text/html" title="VPN de acceso remoto con WireGuard (Windows, Linux, Android)" /><published>2023-01-12T12:47:17+01:00</published><updated>2023-01-12T12:47:17+01:00</updated><id>/seguridad/2023/01/12/vpn-c</id><content type="html" xml:base="/seguridad/2023/01/12/vpn-c.html"><![CDATA[<h2 id="introducción">Introducción</h2>

<p>En este post vamos a configurar un servidor VPN con WireGuard. WireGuard es un protocolo de túnel de código abierto que se ha convertido en una alternativa a OpenVPN. WireGuard es más rápido, más ligero y más fácil de configurar que OpenVPN.</p>

<h2 id="preparando-el-escenario">Preparando el escenario</h2>

<h3 id="máquina-interno">Máquina <strong>Interno</strong></h3>

<p>Vamos a crear una máquina virtual con la ayuda de vagrant que servirá de cliente interno. Esta máquina tendrá una IP privada y no podrá acceder a internet.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Vagrant.configure<span class="o">(</span><span class="s2">"2"</span><span class="o">)</span> <span class="k">do</span> |config|
    config.vm.provider :libvirt <span class="k">do</span> |libvirt|
        libvirt.memory <span class="o">=</span> 1024
    end
    config.vm.define :nodo1 <span class="k">do</span> |nodo1|
      nodo1.vm.box <span class="o">=</span> <span class="s2">"debian/bullseye64"</span>
      nodo1.vm.hostname <span class="o">=</span> <span class="s2">"Interno"</span>
      nodo1.vm.synced_folder <span class="s2">"."</span>, <span class="s2">"/vagrant"</span>, disabled: <span class="nb">true
      </span>nodo1.vm.network :private_network,
        :libvirt__network_name <span class="o">=&gt;</span> <span class="s2">"Privada"</span>,
        :libvirt__dhcp_enabled <span class="o">=&gt;</span> <span class="nb">false</span>,
        :ip <span class="o">=&gt;</span> <span class="s2">"192.168.20.10"</span>,
        :libvirt__netmask <span class="o">=&gt;</span> <span class="s1">'255.255.255.0'</span>,
        :mode <span class="o">=&gt;</span> <span class="s2">"veryisolated"</span>
    end
end
</code></pre></div></div>
<p>Y le configuraremos la ruta por defecto para que vaya por la ip ‘192.168.20.1’ que es la ip del servidor VPN.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ip r del default
ip r add default via 192.168.20.1
</code></pre></div></div>

<p><img src="/assets/images/vpn/C/1.png" alt="1" /></p>

<h3 id="maquina-servidor">Maquina <strong>Servidor</strong></h3>

<p>Vamos a crear una máquina virtual con la ayuda de vagrant que servirá de servidor VPN. Esta máquina tendrá una IP pública y podrá acceder a internet.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Vagrant.configure<span class="o">(</span><span class="s2">"2"</span><span class="o">)</span> <span class="k">do</span> |config|

    config.vm.provider :libvirt <span class="k">do</span> |v|
      v.memory <span class="o">=</span> 1024
      end
    config.vm.define :nodo1 <span class="k">do</span> |nodo1|
      nodo1.vm.box <span class="o">=</span> <span class="s2">"debian/bullseye64"</span>
      nodo1.vm.hostname <span class="o">=</span> <span class="s2">"Servidor"</span>
      nodo1.vm.synced_folder <span class="s2">"."</span>, <span class="s2">"/vagrant"</span>, disabled: <span class="nb">true
      </span>nodo1.vm.network :private_network,
      :libvirt__network_name <span class="o">=&gt;</span> <span class="s2">"VPN3"</span>,
      :libvirt__dhcp_enabled <span class="o">=&gt;</span> <span class="nb">false</span>,
      :ip <span class="o">=&gt;</span> <span class="s2">"192.168.99.10"</span>,
      :libvirt__netmask <span class="o">=&gt;</span> <span class="s1">'255.255.255.0'</span>,
      :libvirt__forward_mode <span class="o">=&gt;</span> <span class="s2">"veryisolated"</span>
      nodo1.vm.network :private_network,
        :libvirt__network_name <span class="o">=&gt;</span> <span class="s2">"Privada"</span>,
        :libvirt__dhcp_enabled <span class="o">=&gt;</span> <span class="nb">false</span>,
        :ip <span class="o">=&gt;</span> <span class="s2">"192.168.20.1"</span>,
        :libvirt__netmask <span class="o">=&gt;</span> <span class="s1">'255.255.255.0'</span>,
        :mode <span class="o">=&gt;</span> <span class="s2">"veryisolated"</span>
    end
end
</code></pre></div></div>

<p>En esta máquina vamos a instalar WireGuard.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt <span class="nb">install </span>wireguard
</code></pre></div></div>

<p>Activamos el bit de forwarding en el kernel.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo </span>1 <span class="o">&gt;</span> /proc/sys/net/ipv4/ip_forward
</code></pre></div></div>

<p>Nos dirigimos al directorio de configuración de WireGuard, creamos las claves del servidor que nos servirán para configurar los clientes y el fichero de configuración del servidor.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wg genkey | <span class="nb">tee </span>serverprivatekey | wg pubkey <span class="o">&gt;</span> serverpublickey
</code></pre></div></div>

<p><img src="/assets/images/vpn/C/2.png" alt="2" /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>Interface]
<span class="c">#IP del servidor</span>
Address <span class="o">=</span> 10.99.99.1
<span class="c">#Clave privada del servidor</span>
PrivateKey <span class="o">=</span> <span class="nv">gFfh8vumUY89MkV269eYEiDdT9IWdfKDvV1T0DcSsEA</span><span class="o">=</span>
<span class="c">#Puerto de escucha</span>
ListenPort <span class="o">=</span> 51820
</code></pre></div></div>

<p>Activamos la interfaz de WireGuard.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wg-quick up wg0
</code></pre></div></div>

<p>Y comprobamos que funciona correctamente.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wg
</code></pre></div></div>

<p><img src="/assets/images/vpn/C/3.png" alt="3" /></p>

<p><img src="/assets/images/vpn/C/4.png" alt="4" /></p>

<h3 id="cliente-linux">Cliente <strong>Linux</strong></h3>

<p>Vamos a crear una máquina virtual con la ayuda de vagrant que servirá de cliente para la VPN.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Vagrant.configure<span class="o">(</span><span class="s2">"2"</span><span class="o">)</span> <span class="k">do</span> |config|

    config.vm.provider :libvirt <span class="k">do</span> |v|
      v.memory <span class="o">=</span> 1024
    end
    config.vm.define :nodo1 <span class="k">do</span> |nodo1|
      nodo1.vm.box <span class="o">=</span> <span class="s2">"debian/bullseye64"</span>
      nodo1.vm.hostname <span class="o">=</span> <span class="s2">"Linux"</span>
      nodo1.vm.synced_folder <span class="s2">"."</span>, <span class="s2">"/vagrant"</span>, disabled: <span class="nb">true
      </span>nodo1.vm.network :private_network,
      :libvirt__network_name <span class="o">=&gt;</span> <span class="s2">"VPN3"</span>,
      :libvirt__dhcp_enabled <span class="o">=&gt;</span> <span class="nb">false</span>,
      :ip <span class="o">=&gt;</span> <span class="s2">"192.168.99.11"</span>,
      :libvirt__netmask <span class="o">=&gt;</span> <span class="s1">'255.255.255.0'</span>,
      :libvirt__forward_mode <span class="o">=&gt;</span> <span class="s2">"veryisolated"</span>
    end
end
</code></pre></div></div>

<p>Y le configuraremos la ruta por defecto para que vaya por la ip ‘192.168.20.1’ que es la ip del servidor VPN.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ip r del default
ip r add default via 192.168.99.10
</code></pre></div></div>

<p>En esta máquina realizaremos la configuración de wireguard como hemos realizado en la máquina anterior.</p>

<ul>
  <li>
    <p>Instalamos wireguard</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  apt <span class="nb">install </span>wireguard
</code></pre></div>    </div>
  </li>
  <li>
    <p>Nos dirigimosal directorio <code class="language-plaintext highlighter-rouge">/etc/wireguard/</code>y creamos el par de claves:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  wg genkey | <span class="nb">tee </span>clientprivatekey | wg pubkey <span class="o">&gt;</span> clientpublickey
</code></pre></div>    </div>

    <p><img src="/assets/images/vpn/C/5.png" alt="5" /></p>
  </li>
  <li>
    <p>Creamos el fichero de configuración del cliente:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="o">[</span>Interface]
  Address <span class="o">=</span> 10.99.99.2/24
  <span class="c">#Clave privada del cliente</span>
  PrivateKey <span class="o">=</span> 8J4d+gUAoZMNPZ1unrMtPJ4p7a2aXAB24MXnlmx+CEU<span class="o">=</span>
  <span class="c">#Puerto de escucha del servidor</span>
  ListenPort <span class="o">=</span> 51820

  <span class="o">[</span>Peer]
  <span class="c">#Clave pública del servidor</span>
  PublicKey <span class="o">=</span> <span class="nv">KGD20wvABWB20aj02aCsUfKxphiubQUa0iGOMSVqNHc</span><span class="o">=</span>
  AllowedIPs <span class="o">=</span> 0.0.0.0/0
  <span class="c">#Punto de acceso del servidor</span>
  Endpoint <span class="o">=</span> 192.168.99.10:51820
  <span class="c">#Tiempo de espera de la conexión</span>
  PersistentKeepalive <span class="o">=</span> 25
</code></pre></div>    </div>
  </li>
  <li>
    <p>Activamos la interfaz de WireGuard.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  wg-quick up wg0
</code></pre></div>    </div>
    <p><img src="/assets/images/vpn/C/6.png" alt="6" /></p>

    <p><img src="/assets/images/vpn/C/7.png" alt="7" /></p>
  </li>
</ul>

<p>Configurado el cliente, deberemos configurar en el fichero <code class="language-plaintext highlighter-rouge">wg0.cong</code>de <code class="language-plaintext highlighter-rouge">servidor</code> donde incluiremos el cliente que recientemente hemos configurado y el fichero quedaría de la siguiente manera:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>Interface]
Address <span class="o">=</span> 10.99.99.1
<span class="c">#Clave privada del servidor</span>
PrivateKey <span class="o">=</span> <span class="nv">gFfh8vumUY89MkV269eYEiDdT9IWdfKDvV1T0DcSsEA</span><span class="o">=</span>
<span class="c">#Puerto de escucha</span>
ListenPort <span class="o">=</span> 51820

<span class="c">#Bit de forwarding</span>
PreUp <span class="o">=</span> sysctl <span class="nt">-w</span> net.ipv4.ip_forward<span class="o">=</span>1

<span class="c"># Cliente Debian 11</span>
<span class="o">[</span>Peer]
<span class="c">#Clave pública del cliente</span>
Publickey <span class="o">=</span> pQLF6BndUY/V15vvCymgo+84qWp5YzLLjXpybSmMBDo<span class="o">=</span>
<span class="c">#IP del cliente</span>
AllowedIPs <span class="o">=</span> 10.99.99.2/32
<span class="c">#Tiempo de espera de respuesta</span>
PersistentKeepAlive <span class="o">=</span> 25
</code></pre></div></div>

<p>Reiniciaos el servicio y comprobamos que el cliente se ha conectado correctamente.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wg-quick down wg0
wg
</code></pre></div></div>
<p><img src="/assets/images/vpn/C/8.png" alt="8" /></p>

<p><img src="/assets/images/vpn/C/9.png" alt="9" /></p>

<h3 id="comprobaciones-de-funcionamiento">Comprobaciones de funcionamiento</h3>

<p>Desde el propio cliente podemos comprobar el funcionamiento de la VPN.</p>

<p><img src="/assets/images/vpn/C/10.png" alt="10" /></p>

<p>Desde el servidor podemos comprobar que el cliente Android se ha conectado correctamente.</p>

<p><img src="/assets/images/vpn/C/11.png" alt="11" /></p>

<h2 id="configuración-del-cliente-windows">Configuración del cliente windows</h2>

<p>Lo primero que deberemos realizar es el cambio de ip de la interfaz de red de la máquina virtual para que no haya conflictos con la ip de la VPN. Para ello, ejecutamos el administrador de sistema en modo administrador y escribimos en la consola:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>netsh
interface ip <span class="nb">set </span>address <span class="nv">name</span><span class="o">=</span><span class="s2">"Ethernet"</span> static 192.168.99.12 255.255.255.0 192.168.99.10
</code></pre></div></div>

<p><img src="/assets/images/vpn/C/12.png" alt="12" /></p>

<p>Descargamos wildguard desde su <a href="https://www.wireguard.com/install/">página oficial</a>, y una vez instalado, abrimos el programa y en la parte inferior izquierda, tenemos un menú desplegable donde seleccionamos <code class="language-plaintext highlighter-rouge">Añadir tunel vacío</code>.</p>

<p>En la subventana que se abre, ya nos aparecen creadas ambas claves, la pública y la privada del servidor, por lo que solo tendremos que añadir la clave pública del servidor y la IP.</p>

<p><img src="/assets/images/vpn/C/13.png" alt="13" /></p>

<p>Nos dirigimos al servidor, y añadimos la clave pública del cliente y la IP, quedando el fichero de la siguiente manera:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>Interface]
Address <span class="o">=</span> 10.99.99.1
PrivateKey <span class="o">=</span> <span class="nv">gFfh8vumUY89MkV269eYEiDdT9IWdfKDvV1T0DcSsEA</span><span class="o">=</span>
ListenPort <span class="o">=</span> 51820

PreUp <span class="o">=</span> sysctl <span class="nt">-w</span> net.ipv4.ip_forward<span class="o">=</span>1

<span class="c"># Cliente Debian 11</span>
<span class="o">[</span>Peer]
Publickey <span class="o">=</span> pQLF6BndUY/V15vvCymgo+84qWp5YzLLjXpybSmMBDo<span class="o">=</span>
AllowedIPs <span class="o">=</span> 10.99.99.2/32
PersistentKeepAlive <span class="o">=</span> 25

<span class="c"># Cliente Windows</span>

<span class="o">[</span>Peer]
Publickey <span class="o">=</span> <span class="nv">SqFFutq1xAbGzj3POiHSRbbPpQAH1clUkyWikKjhojg</span><span class="o">=</span>
AllowedIPs <span class="o">=</span> 10.99.99.2/32
PersistentKeepAlive <span class="o">=</span> 25
</code></pre></div></div>

<p>Reiniciamos el servicio y comprobamos que el cliente se ha conectado correctamente.</p>

<p><img src="/assets/images/vpn/C/14.png" alt="14" /></p>

<p><img src="/assets/images/vpn/C/15.png" alt="15" /></p>

<h3 id="comprobaciones-de-funcionamiento-1">Comprobaciones de funcionamiento</h3>

<p>En las siguientes imágenes, podemos ver que el cliente windows puede acceder a la red interna y también con el cliente linux.</p>

<p><img src="/assets/images/vpn/C/16.png" alt="16" /></p>

<p><img src="/assets/images/vpn/C/17.png" alt="17" /></p>

<h2 id="configuración-del-cliente-android">Configuración del cliente Android</h2>

<p>Para este punto del escenario, voy a usar mi máquina host como servidor VPN y mi móvil físico como cliente. Para ello, hemos instalado la aplicación WireGuard en el móvil y hemos configurado el servidor con la IP de mi móvil.</p>

<p>Para hacerlo posible, vamos a realizar la configuración del cliente en la propia máquina servidor y luego pasaremos dicha configuración al móvil a través de un código QR que generaremos en nuestra consola.</p>

<ul>
  <li>
    <p>Creamos las claves pública y privada del cliente.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wg genkey | <span class="nb">tee </span>androidprivate | wg pubkey <span class="o">&gt;</span> androidpublic
</code></pre></div>    </div>
  </li>
  <li>
    <p>Creamos el fichero de configuración del cliente.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>Interface]
Address <span class="o">=</span> 10.99.99.4
PrivateKey <span class="o">=</span> wHf9pBV923/XKWPzFVPp39w3eUZ7wU7DsE6cvu36F2s<span class="o">=</span>
ListenPort <span class="o">=</span> 51820
  
<span class="o">[</span>Peer]
Publickey <span class="o">=</span><span class="nv">n9IjUHqVAQ9WEW80syWFYmgY5IG80kd5J9j2godvgm8</span><span class="o">=</span>
AllowedIPs <span class="o">=</span> 0.0.0.0/0
Endpoint <span class="o">=</span> 192.168.15.32:51820
</code></pre></div>    </div>
  </li>
  <li>
    <p>Ahora generaremos el código QR con el que pasaremos la configuración al móvil.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>qrencode <span class="nt">-t</span> ansiutf8 &lt; android.conf
</code></pre></div>    </div>

    <p><img src="/assets/images/vpn/C/18.png" alt="18" /></p>
  </li>
  <li>
    <p>Modificamos el fichero de configuración del servidor para añadir la clave pública del cliente y la IP.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>Interface]
<span class="c">#IP del servidor</span>
Address <span class="o">=</span> 10.99.99.1
<span class="c">#Clave privada del servidor</span>
PrivateKey <span class="o">=</span> <span class="nv">gFfh8vumUY89MkV269eYEiDdT9IWdfKDvV1T0DcSsEA</span><span class="o">=</span>
<span class="c">#Puerto de escucha</span>
ListenPort <span class="o">=</span> 51820

<span class="o">[</span>Peer]
Publickey <span class="o">=</span> Iq47qp/TP8bx6v4qDJwTiHwWYSO7/y23FvK1SpIdzi0<span class="o">=</span>
AllowedIPs <span class="o">=</span> 10.99.99.4/32
PersistentKeepAlive <span class="o">=</span> 25
</code></pre></div>    </div>
  </li>
  <li>
    <p>Tras ello, reiniciamos el servicio y comprobamos que el cliente se ha conectado correctamente.</p>

    <p><img src="/assets/images/vpn/C/19.png" alt="19" /></p>

    <p><img src="/assets/images/vpn/C/20.png" alt="20" /></p>
  </li>
</ul>

<h3 id="comprobaciones-de-funcionamiento-2">Comprobaciones de funcionamiento</h3>

<p>Para verificar que funciona correctamente, haremos ping desde el cliente interno al cliente android y desde el cliente android al servidor.</p>

<p><img src="/assets/images/vpn/C/21.png" alt="21" /></p>

<p><img src="/assets/images/vpn/C/22.png" alt="22" /></p>

<p><img src="/assets/images/vpn/C/23.png" alt="23" /></p>

<h2 id="conclusiones">Conclusiones</h2>

<p>Comparando OpenVPN y WireGuard, podemos ver que WireGuard es mucho más sencillo de configurar y que tiene un rendimiento mucho mejor. Con Wireguard no es necesario que creamos un certificado para cada cliente, ya que solo necesitamos la clave pública del cliente y la clave privada del servidor.</p>

<p>Otro de los puntos a favor de WireGuard es que no es necesario que el servidor tenga una IP pública, ya que podemos usar un servidor con una IP privada y usar un servicio de tunelado.</p>]]></content><author><name></name></author><category term="SEGURIDAD" /><summary type="html"><![CDATA[Introducción]]></summary></entry><entry><title type="html">Taller Docker - Almacenamiento y Redes</title><link href="/iaw/2023/01/12/docker-almacenamiento.html" rel="alternate" type="text/html" title="Taller Docker - Almacenamiento y Redes" /><published>2023-01-12T12:47:17+01:00</published><updated>2023-01-12T12:47:17+01:00</updated><id>/iaw/2023/01/12/docker-almacenamiento</id><content type="html" xml:base="/iaw/2023/01/12/docker-almacenamiento.html"><![CDATA[<h2 id="almacenamiento">Almacenamiento</h2>

<h3 id="volúmenes-docker">Volúmenes docker</h3>

<ol>
  <li>
    <p>Crearemos un volumen docker que se llame miweb.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker volume create miweb
</code></pre></div>    </div>

    <p>Y mostramos que el volumen se ha creado correctamente.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker volume <span class="nb">ls</span>
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller1/1.png" alt="1" /></p>
  </li>
  <li>
    <p>Crea un contenedor desde la imagen php:7.4-apache donde montes en el directorio /var/www/html el volumen docker que has creado.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker run <span class="nt">-d</span> <span class="nt">--name</span> miweb <span class="nt">-p</span> 80:80 <span class="nt">-v</span> miweb:/var/www/html php:7.4-apache
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller1/2.png" alt="2" /></p>
  </li>
  <li>
    <p>Utiliza el comando docker cp para copiar un fichero index.html (donde aparece tu nombre) en el directorio /var/www/html.</p>

    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="cp">&lt;!DOCTYPE html&gt;</span>
 <span class="nt">&lt;html&gt;</span>
     <span class="nt">&lt;body&gt;</span>
         <span class="nt">&lt;h1&gt;</span>Nombre: Maria Jesus<span class="nt">&lt;/h1&gt;</span>
         <span class="nt">&lt;h2&gt;</span>Prueba de docker<span class="nt">&lt;/h2&gt;</span>
     <span class="nt">&lt;/body&gt;</span>
 <span class="nt">&lt;/html&gt;</span>
</code></pre></div>    </div>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker <span class="nb">cp </span>index.html miweb:/var/www/html/index.html
</code></pre></div>    </div>
  </li>
  <li>
    <p>Accede al contenedor desde el navegador para ver la información ofrecida por el fichero index.html.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> http://localhost
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller1/3.png" alt="3" /></p>
  </li>
  <li>
    <p>Borra el contenedor</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker <span class="nb">rm</span> <span class="nt">-f</span> miweb
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller1/4.png" alt="4" /></p>
  </li>
  <li>
    <p>Crea un nuevo contenedor y monta el mismo volumen como en el ejercicio anterior.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker run <span class="nt">-d</span> <span class="nt">--name</span> miweb <span class="nt">-p</span> 80:80 <span class="nt">-v</span> miweb:/var/www/html php:7.4-apache
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller1/5.png" alt="5" /></p>
  </li>
  <li>
    <p>Accede al contenedor desde el navegador para ver la información ofrecida por el fichero index.html. ¿Seguía existiendo ese fichero?</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> http://localhost:8080
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller1/6.png" alt="6" /></p>

    <ul>
      <li>El fichero sigue existiendo porque se ha creado un volumen docker que se ha montado en el contenedor.</li>
    </ul>
  </li>
</ol>

<h3 id="bind-mounts">Bind Mounts</h3>

<ol>
  <li>
    <p>Crea un directorio en tu host y dentro crea un fichero index.html (donde aparece tu nombre).</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">mkdir</span> <span class="nt">-p</span> /home/maria/Documentos/2ASIR/IAW/Docker
 <span class="nb">cd</span> /home/maria/Documentos/2ASIR/IAW/Docker
 <span class="nb">touch </span>index.html
</code></pre></div>    </div>
  </li>
  <li>
    <p>Crea un contenedor desde la imagen php:7.4-apache donde montes en el directorio /var/www/html el directorio que has creado por medio de bind mount.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker run <span class="nt">-d</span> <span class="nt">--name</span> miweb <span class="nt">-p</span> 80:80 <span class="nt">-v</span> /home/maria/Documentos/2ASIR/IAW/Docker/index.html:/var/www/html/index.html php:7.4-apache
</code></pre></div>    </div>
  </li>
  <li>
    <p>Accede al contenedor desde el navegador para ver la información ofrecida por el fichero index.html.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> http://localhost:8080
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller1/7.png" alt="7" /></p>
  </li>
  <li>
    <p>Modifica el contenido del fichero index.html en tu host y comprueba que al refrescar la página ofrecida por el contenedor, el contenido ha cambiado.</p>

    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="cp">&lt;!DOCTYPE html&gt;</span>
 <span class="nt">&lt;html&gt;</span>
     <span class="nt">&lt;body&gt;</span>
         <span class="nt">&lt;h1&gt;</span>Nombre: Maria Jesus<span class="nt">&lt;/h1&gt;</span>
         <span class="nt">&lt;h2&gt;</span>Prueba Bind Mounts<span class="nt">&lt;/h2&gt;</span>
     <span class="nt">&lt;/body&gt;</span>
 <span class="nt">&lt;/html&gt;</span>
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller1/8.png" alt="8" /></p>
  </li>
  <li>
    <p>Borra el contenedor</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker <span class="nb">rm</span> <span class="nt">-f</span> miweb
</code></pre></div>    </div>
  </li>
  <li>
    <p>Crea un nuevo contenedor y monta el mismo directorio como en el ejercicio anterior.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> docker run <span class="nt">-d</span> <span class="nt">--name</span> miweb <span class="nt">-p</span> 80:80 <span class="nt">-v</span> /home/maria/Documentos/2ASIR/IAW/Docker/index.html:/var/www/html/index.html php:7.4-apache
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller1/9.png" alt="9" /></p>
  </li>
  <li>
    <p>Accede al contenedor desde el navegador para ver la información ofrecida por el fichero index.html. ¿Se sigue viendo el mismo contenido?</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> http://localhost:8080
</code></pre></div>    </div>

    <p><img src="/assets/images/docker/taller1/10.png" alt="10" /></p>

    <ul>
      <li>El contenido sigue siendo el mismo porque se ha montado el directorio en el contenedor.</li>
    </ul>
  </li>
</ol>

<h2 id="redes">Redes</h2>

<p>Despliegue de Nextcloud + mariadb/postgreSQL</p>

<p>Vamos a desplegar la aplicación nextcloud con una base de datos. Para ello sigue los siguientes pasos:</p>

<p>Crea una red de tipo bridge para que los contenedores se puedan comunicar entre ellos.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```bash
docker network create nextcloud-net
```
</code></pre></div></div>

<p><img src="/assets/images/docker/taller1/11.png" alt="11" /></p>

<p>Crea el contenedor de la base de datos conectado a la red que has creado. La base de datos se debe configurar para crear una base de dato y un usuario. Además el contenedor debe utilizar almacenamiento para guardar la información.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```bash
docker run -d --name nextcloud-db -e MYSQL_ROOT_PASSWORD=nextcloud -e MYSQL_DATABASE=nextcloud -e MYSQL_USER=nextcloud -e MYSQL_PASSWORD=admin -v nextcloud-db:/var/lib/mysql --network nextcloud-net mariadb
```
</code></pre></div></div>

<p><img src="/assets/images/docker/taller1/12.png" alt="12" /></p>

<p>A continuación, siguiendo la documentación de la imagen nextcloud, crea un contenedor conectado a la misma red, e indica las variables adecuadas para que se configure de forma adecuada y realice la conexión a la base de datos. El contenedor también debe ser persistente usando almacenamiento.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```bash
docker run -d --name nextcloud -p 80:80 -e MYSQL_DATABASE=nextcloud -e MYSQL_USER=nextcloud -e MYSQL_PASSWORD=admin -e MYSQL_HOST=nextcloud-db -v nextcloud:/var/www/html --network nextcloud-net nextcloud
```
</code></pre></div></div>

<p><img src="/assets/images/docker/taller1/13.png" alt="13" /></p>

<p>Accede a la aplicación usando un navegador web.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```bash
http://localhost:8080
```
</code></pre></div></div>

<p><img src="/assets/images/docker/taller1/14.png" alt="14" /></p>

<p><img src="/assets/images/docker/taller1/15.png" alt="15" /></p>]]></content><author><name></name></author><category term="IAW" /><summary type="html"><![CDATA[Almacenamiento]]></summary></entry><entry><title type="html">VPN site to site con OpenVPN y certificados x509</title><link href="/seguridad/2023/01/11/vpn-b.html" rel="alternate" type="text/html" title="VPN site to site con OpenVPN y certificados x509" /><published>2023-01-11T12:47:17+01:00</published><updated>2023-01-11T12:47:17+01:00</updated><id>/seguridad/2023/01/11/vpn-b</id><content type="html" xml:base="/seguridad/2023/01/11/vpn-b.html"><![CDATA[<h2 id="introducción">Introducción</h2>
<p>En este post vamos a configurar una conexión VPN sitio a sitio entre dos equipos:</p>

<ul>
  <li>Cada equipo estará conectado a dos redes, una de ellas en común</li>
  <li>Para la autenticación de los extremos se usarán obligatoriamente certificados digitales, que se generarán utilizando openssl y se almacenarán en el directorio /etc/openvpn, junto con con los parámetros Diffie-Helman y el certificado de la propia Autoridad de Certificación.</li>
  <li>Se utilizarán direcciones de la red 10.99.99.0/24 para las direcciones virtuales de la VPN.</li>
  <li>Tras el establecimiento de la VPN, una máquina de cada red detrás de cada servidor VPN debe ser capaz de acceder a una máquina del otro extremo.</li>
</ul>

<p><img src="/assets/images/vpn/B/VPN.png" alt="escenario" /></p>

<h2 id="preparando-el-escenario">Preparando el escenario</h2>

<p>Vamos a dividir el escenario en dos, por una parte, un escenario que actuará de servidor:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Vagrant.configure<span class="o">(</span><span class="s2">"2"</span><span class="o">)</span> <span class="k">do</span> |config|
    config.vm.provider :libvirt <span class="k">do</span> |libvirt|
        libvirt.memory <span class="o">=</span> 1024
    end
    config.vm.define :nodo1 <span class="k">do</span> |nodo1|
      nodo1.vm.box <span class="o">=</span> <span class="s2">"debian/bullseye64"</span>
      nodo1.vm.hostname <span class="o">=</span> <span class="s2">"Servidor"</span>
      nodo1.vm.synced_folder <span class="s2">"."</span>, <span class="s2">"/vagrant"</span>, disabled: <span class="nb">true
      </span>nodo1.vm.network :private_network,
        :libvirt__network_name <span class="o">=&gt;</span> <span class="s2">"privadavpn"</span>,
        :libvirt__dhcp_enabled <span class="o">=&gt;</span> <span class="nb">false</span>,
        :ip <span class="o">=&gt;</span> <span class="s2">"172.30.0.10"</span>,
        :netmask <span class="o">=&gt;</span> <span class="s2">"255.255.255.0"</span>,
        :libvirt__forward_mode <span class="o">=&gt;</span> <span class="s2">"veryisolated"</span>
    end
    config.vm.define :nodo2 <span class="k">do</span> |nodo2|
      nodo2.vm.synced_folder <span class="s2">"."</span>, <span class="s2">"/vagrant"</span>, disabled: <span class="nb">true
      </span>nodo2.vm.box <span class="o">=</span> <span class="s2">"debian/bullseye64"</span>
      nodo2.vm.hostname <span class="o">=</span> <span class="s2">"Cliente"</span>
      nodo2.vm.network :private_network,
        :libvirt__network_name <span class="o">=&gt;</span> <span class="s2">"privadavpn"</span>,
        :libvirt__dhcp_enabled <span class="o">=&gt;</span> <span class="nb">false</span>,
        :ip <span class="o">=&gt;</span> <span class="s2">"172.30.0.11"</span>,
        :netmask <span class="o">=&gt;</span> <span class="s2">"255.255.255.0"</span>,
        :libvirt__forward_mode <span class="o">=&gt;</span> <span class="s2">"veryisolated"</span>
     end
  end
</code></pre></div></div>

<p>Y por otra parte, un escenario que actuará de cliente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Vagrant.configure<span class="o">(</span><span class="s2">"2"</span><span class="o">)</span> <span class="k">do</span> |config|
    config.vm.provider :libvirt <span class="k">do</span> |libvirt|
        libvirt.memory <span class="o">=</span> 1024
    end
    config.vm.define :nodo1 <span class="k">do</span> |nodo1|
      nodo1.vm.box <span class="o">=</span> <span class="s2">"debian/bullseye64"</span>
      nodo1.vm.hostname <span class="o">=</span> <span class="s2">"Servidor2"</span>
      nodo1.vm.synced_folder <span class="s2">"."</span>, <span class="s2">"/vagrant"</span>, disabled: <span class="nb">true
      </span>nodo1.vm.network :private_network,
        :libvirt__network_name <span class="o">=&gt;</span> <span class="s2">"privadvpn2"</span>,
        :libvirt__dhcp_enabled <span class="o">=&gt;</span> <span class="nb">false</span>,
        :ip <span class="o">=&gt;</span> <span class="s2">"172.20.0.10"</span>,
        :netmask <span class="o">=&gt;</span> <span class="s2">"255.255.255.0"</span>,
        :libvirt__forward_mode <span class="o">=&gt;</span> <span class="s2">"veryisolated"</span>
    end
    config.vm.define :nodo2 <span class="k">do</span> |nodo2|
      nodo2.vm.synced_folder <span class="s2">"."</span>, <span class="s2">"/vagrant"</span>, disabled: <span class="nb">true
      </span>nodo2.vm.box <span class="o">=</span> <span class="s2">"debian/bullseye64"</span>
      nodo2.vm.hostname <span class="o">=</span> <span class="s2">"Cliente2"</span>
      nodo2.vm.network :private_network,
        :libvirt__network_name <span class="o">=&gt;</span> <span class="s2">"privadvpn2"</span>,
        :libvirt__dhcp_enabled <span class="o">=&gt;</span> <span class="nb">false</span>,
        :ip <span class="o">=&gt;</span> <span class="s2">"172.20.0.11"</span>,
        :netmask <span class="o">=&gt;</span> <span class="s2">"255.255.255.0"</span>,
        :libvirt__forward_mode <span class="o">=&gt;</span> <span class="s2">"veryisolated"</span>
     end
end
</code></pre></div></div>

<h2 id="configurando-el-servidor">Configurando el servidor</h2>

<p>Lo primero que tendremos que hacer es instalar el servicio openvpn y crearemos el fichero <code class="language-plaintext highlighter-rouge">.vars</code> que contendrá las variables que usaremos en el resto de la configuración:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt <span class="nb">install </span>openvpn

<span class="nb">cp</span> /usr/share/easy-rsa/vars.example /etc/openvpn/easy-rsa/vars
</code></pre></div></div>

<p>Ahora, vamos a editar el fichero <code class="language-plaintext highlighter-rouge">/etc/openvpn/easy-rsa/vars</code> y vamos a modificar las siguientes variables:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>set_var EASYRSA_REQ_COUNTRY     <span class="s2">"ES"</span>
set_var EASYRSA_REQ_PROVINCE    <span class="s2">"Sevilla"</span>
set_var EASYRSA_REQ_CITY        <span class="s2">"Dos Hermanas"</span>
set_var EASYRSA_REQ_ORG         <span class="s2">"MJAR"</span>
set_var EASYRSA_REQ_EMAIL       <span class="s2">"mariajesus.alloza@outlook.es"</span>
set_var EASYRSA_REQ_OU          <span class="s2">"VPN site to site"</span>
</code></pre></div></div>

<p>Creamos eldirectorio donde almacenaremos la Autoridad Certificadore (CA) y generamos la clave Diffie-Helman:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /usr/share/easy-rsa
./easyrsa init-pki
<span class="nt">---</span>
./easyrsa gen-dh
</code></pre></div></div>

<p><img src="/assets/images/vpn/B/1.png" alt="1" /></p>

<p><img src="/assets/images/vpn/B/2.png" alt="2" /></p>

<p>Terminado esto, construimos la Autoridad certificadora:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./easyrsa build-ca
<span class="c">#Frase de paso: admin</span>
</code></pre></div></div>

<p><img src="/assets/images/vpn/B/3.png" alt="3" /></p>

<p>El siguiente paso será que, ya teniendo nuestra Autoridad Certificadora, crearemos y firmaremos el certificado para <code class="language-plaintext highlighter-rouge">server</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./easyrsa gen-req server
./easyrsa sign-req server server
</code></pre></div></div>

<p><img src="/assets/images/vpn/B/4.png" alt="4" /></p>

<p><img src="/assets/images/vpn/B/5.png" alt="5" /></p>

<p>Ahora le toca el turno al segundo escenario, y comenzaremos firmando el certificado para <code class="language-plaintext highlighter-rouge">server2</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./easyrsa gen-req server2
./easyrsa sign-req client server2
</code></pre></div></div>

<p><img src="/assets/images/vpn/B/6.png" alt="6" /></p>

<p><img src="/assets/images/vpn/B/7.png" alt="7" /></p>

<p>Copiamos los certificados y claves generadas al directorio <code class="language-plaintext highlighter-rouge">/etc/openvpn/server</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#Copiamos los ficheros</span>
<span class="nb">cp</span> <span class="nt">-rp</span> /etc/openvpn/easy-rsa/pki<span class="o">{</span>ca.crt,dh.pem,issued/server.crt,private/server.key<span class="o">}</span> /etc/openvpn/server

<span class="c">#Enviamos por scp los ficheros</span>
scp <span class="nt">-r</span> /etc/openvpn/server vagrant@192.168.121.21:
</code></pre></div></div>

<p><img src="/assets/images/vpn/B/8.png" alt="8" /></p>

<p><img src="/assets/images/vpn/B/9.png" alt="9" /></p>

<p>Creamos el fichero de configuración del servidor VPN:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cp</span> /usr/share/doc/openvpn/examples/sample-config-files/server.conf /etc/openvpn/server/server.conf
</code></pre></div></div>

<p>Y editamos el fichero <code class="language-plaintext highlighter-rouge">/etc/openvpn/server/servidor.conf</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dev tun
ifconfig 10.99.99.1 10.99.99.2
route 172.20.0.0 255.255.255.0
tls-server
ca ca.crt
cert server.crt
key server.key
dh dh.pem
comp-lzo
keepalive 10 120
log /var/log/openvpn/server.log
verb 3
askpass contra.txt
</code></pre></div></div>

<p>Iniciamos el servicio y nos cercioramos de que está activo:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl <span class="nb">enable</span> <span class="nt">--now</span> openvpn-server@servidor
systemctl start openvpn-server@servidor
systemctl status openvpn-server@servidor
</code></pre></div></div>

<p><img src="/assets/images/vpn/B/10.png" alt="10" /></p>

<p>Configuramos el bit de forwarding en el servidor:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo </span>1 <span class="o">&gt;</span> /proc/sys/net/ipv4/ip_forward
</code></pre></div></div>

<p>Y configuramos el cliente del primer escenario cambiando la ruta por defecto:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ip route del default
ip route add default via 172.20.0.20
</code></pre></div></div>

<p><img src="/assets/images/vpn/B/11.png" alt="11" /></p>

<h2 id="configurando-el-cliente">Configurando el cliente</h2>

<p>Ahora le toca el turno a <code class="language-plaintext highlighter-rouge">servidor2</code> y comenzaremos moviendo los ficheros de los certificados y claves generadas al directorio <code class="language-plaintext highlighter-rouge">/etc/openvpn/client</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#Copiamos los ficheros</span>
<span class="nb">mv </span>ca.crt /etc/openvpn/client
<span class="nb">mv </span>server2.crt /etc/openvpn/client
<span class="nb">mv </span>server2.key /etc/openvpn/client
</code></pre></div></div>

<p>Creamos el fichero de configuración tomando primero como referencia el fichero de configuración del servidor:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cp</span> /usr/share/doc/openvpn/examples/sample-config-files/client.conf /etc/openvpn/client/client.conf
</code></pre></div></div>

<p>Y editamos el fichero <code class="language-plaintext highlighter-rouge">/etc/openvpn/client/cliente.conf</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dev tun

remote 192.168.121.115
ifconfig 10.99.99.2 10.99.99.1
route 172.30.0.0 255.255.255.0
tls-client
ca ca.crt
cert server.crt
key server.key
comp-lzo
keepalive 10 120
verb 3
askpass contra2.txt
</code></pre></div></div>

<p>Iniciamos el servicio y nos cercioramos de que está activo:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl start openvpn-client@cliente
systemctl status openvpn-client@cliente
</code></pre></div></div>

<p><img src="/assets/images/vpn/B/12.png" alt="12" /></p>

<p>Configuramos el bit de forwarding en el servidor:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo </span>1 <span class="o">&gt;</span> /proc/sys/net/ipv4/ip_forward
</code></pre></div></div>

<p>Y configuramos el cliente del primer escenario cambiando la ruta por defecto:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ip route del default
ip route add default via 172.20.0.20
</code></pre></div></div>

<h2 id="comprobando-la-conexión">Comprobando la conexión</h2>

<p>Comprobamos que el tunel se ha creado correctamente:</p>

<ul>
  <li>
    <p>Rutas del escenario 1</p>

    <p><img src="/assets/images/vpn/B/13.png" alt="13" /></p>
  </li>
  <li>
    <p>Rutas del escenario 2</p>

    <p><img src="/assets/images/vpn/B/14.png" alt="14" /></p>
  </li>
  <li>
    <p>Conexión desde el cliente del escenario 1</p>

    <p><img src="/assets/images/vpn/B/15.png" alt="15" /></p>
  </li>
  <li>
    <p>Conexión desde el cliente del escenario 2</p>

    <p><img src="/assets/images/vpn/B/16.png" alt="16" /></p>
  </li>
</ul>

<h2 id="conclusiones">Conclusiones</h2>

<p>Una VPN site to site es una solución muy útil para conectar dos redes privadas de forma segura. En este caso, hemos utilizado OpenVPN, pero existen otras soluciones como IPsec, que también son muy interesantes.</p>

<p>En este caso, hemos utilizado dos escenarios, pero también se podría utilizar un solo escenario, con dos clientes conectados a un servidor VPN.</p>]]></content><author><name></name></author><category term="SEGURIDAD" /><summary type="html"><![CDATA[Introducción En este post vamos a configurar una conexión VPN sitio a sitio entre dos equipos:]]></summary></entry><entry><title type="html">Servidor de correo en los servidores de clase</title><link href="/hlc+sri/2023/01/10/correo.html" rel="alternate" type="text/html" title="Servidor de correo en los servidores de clase" /><published>2023-01-10T11:59:07+01:00</published><updated>2023-01-10T11:59:07+01:00</updated><id>/hlc+sri/2023/01/10/correo</id><content type="html" xml:base="/hlc+sri/2023/01/10/correo.html"><![CDATA[<p>En este post, vamos a implementar en nuestro <a href="https://sysmaria.netlify.app/hlc+sri/2022/12/05/escenario.html">escenario</a> un servidor de correo.</p>

<p><img src="/assets/images/escenario/escenario.png" alt="Escenario" /></p>

<h1 id="ejercicio-1">Ejercicio 1</h1>

<p>Instalaremos y configuraremos un servidor de correo en <code class="language-plaintext highlighter-rouge">delta</code>. El nombre del sistema de correo será nuestro nombre de dominio <code class="language-plaintext highlighter-rouge">maria.gonzalonazareno.org</code>.</p>

<p>Utilizando la utilidad mail manda un correo desde un usuario del servidor a otro usuario del servidor. El usuario destinatario debe leer el correo con el mismo programa.</p>

<h2 id="preparación-del-escenario">Preparación del escenario</h2>

<ul>
  <li>
    <p>Instalamos el servidor de correo</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">sudo </span>apt <span class="nb">install </span>postfix bsd-mailx
</code></pre></div>    </div>
  </li>
  <li>
    <p>Realizamos una prueba de envío de correo</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">echo</span> <span class="s2">"Hola"</span> | mail <span class="nt">-s</span> <span class="s2">"Prueba"</span>
</code></pre></div>    </div>

    <p><img src="/assets/images/correo/1.png" alt="1" /></p>
  </li>
</ul>

<h1 id="ejercicio-2">Ejercicio 2</h1>

<p>Configura tu servidor de correo para que use como relay el servidor de correo de nuestra <code class="language-plaintext highlighter-rouge">red babuino-smtp.gonzalonazareno.org</code>. Con la utilidad <code class="language-plaintext highlighter-rouge">mail</code> envía un correo a tu cuenta personal de gmail, hotmail,…</p>

<p>Muestra el log del sistema donde se comprueba que el correo se ha enviado con éxito.</p>

<p>Comprueba las cabeceras del correo que has recibido e indica donde vemos los servidores por los que ha pasado el correo.</p>

<ul>
  <li>
    <p>Nos disponemos a usar el servidor de correo de la red babuino</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">sudo </span>nano /etc/postfix/main.cf
</code></pre></div>    </div>

    <p>Y añadimos la siguiente línea</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  relayhost <span class="o">=</span> babuino-smtp.gonzalonazareno.org
</code></pre></div>    </div>

    <p><img src="/assets/images/correo/2.png" alt="2" /></p>
  </li>
  <li>
    <p>Reiniciamos el servicio</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">sudo </span>systemctl restart postfix
</code></pre></div>    </div>
  </li>
  <li>
    <p>Enviamos un correo a nuestro correo personal</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">echo</span> <span class="s2">"Hola"</span> | mail <span class="nt">-s</span> <span class="s2">"Prueba"</span> <span class="nt">-r</span> <span class="s2">"mariajesus.alloza@outlook.es"</span>
</code></pre></div>    </div>

    <p><img src="/assets/images/correo/3.jpg" alt="3" /></p>
  </li>
  <li>
    <p>Comprobamos el log del sistema</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">sudo tail</span> <span class="nt">-f</span> /var/log/mail.log
</code></pre></div>    </div>

    <p><img src="/assets/images/correo/4.png" alt="4" /></p>
  </li>
  <li>
    <p>Comprobamos las cabeceras del correo que hemos recibido</p>

    <p><img src="/assets/images/correo/5.png" alt="5" /></p>
  </li>
</ul>

<h1 id="ejercicio-3">Ejercicio 3</h1>

<p>En este ejercicio debemos responder desde nuestra cuenta de correo personal al correo que recibimos en el ejercicio anterior. Recuerda que para que todo funcione debemos indicarle al profesor el nombre de tu dominio para que configure de manera adecuada el parámetro <code class="language-plaintext highlighter-rouge">relay_domains</code> en <code class="language-plaintext highlighter-rouge">babuino-smtp</code>. Además debes configurar de manera adecuada el registro MX de tu servidor DNS.</p>

<p>Muestra el log del sistema donde se comprueba que el correo se ha recibido con éxito.</p>

<ul>
  <li>
    <p>Nos logueamos en <code class="language-plaintext highlighter-rouge">alfa</code> y configuramos la regla DNAT para que los emails que lleguen a <code class="language-plaintext highlighter-rouge">babuino-smtp</code> sean redirigidos a <code class="language-plaintext highlighter-rouge">delta</code></p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  post-up iptables <span class="nt">-t</span> nat <span class="nt">-A</span> PREROUTING <span class="nt">-p</span> tcp <span class="nt">--dport</span> 25 <span class="nt">-i</span> ens3 <span class="nt">-j</span> DNAT <span class="nt">--to</span> 192.168.0.3
</code></pre></div>    </div>
  </li>
  <li>
    <p>En el contenedor <code class="language-plaintext highlighter-rouge">charlie</code> configuramos el registro MX de nuestro dominio</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">sudo </span>nano <span class="nt">-cl</span> /var/cache/bind/db.externa.mariajesus.gonzalonazareno.org
 <span class="nt">---</span>
 @       IN      MX  10  alfa.mariajesus.gonzalonazareno.org.
</code></pre></div>    </div>
  </li>
  <li>
    <p>Vamos a probar si hemos recibido algún correo, ejecutaremos lo siguiente</p>

    <p><img src="/assets/images/correo/6.png" alt="6" /></p>

    <p><img src="/assets/images/correo/7.png" alt="7" /></p>

    <p><img src="/assets/images/correo/8.png" alt="8" /></p>
  </li>
</ul>

<h2 id="ejercicio-extra">Ejercicio Extra</h2>

<p>Vamos a mandarle un correo electrónico al profesor, comprobando que el correo se ha recibido con éxito y puede ser respondido, por lo que la respuesta nos llegará a nuestra cuenta de correo personal.</p>

<ul>
  <li>
    <p>Enviamos un correo al profesor</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">echo</span> <span class="s2">"Hola Jose Domingo. Le mando este correo como prueba de funcionamiento del servidor de correo en delta."</span> | mail <span class="nt">-s</span> <span class="s2">"Prueba"</span> <span class="nt">-r</span> <span class="s2">"josedomingo@
</span></code></pre></div>    </div>
  </li>
</ul>

<h2 id="comprobación">Comprobación</h2>

<ol>
  <li>
    <p>Prueba de funcionamiento del ejercicio1. Se debe mostrar el log para asegurarse que se ha enviado el correo.</p>

    <p><img src="/assets/images/correo/4.png" alt="4" /></p>
  </li>
  <li>
    <p>Muestra las cabeceras del correo recibido en el ejercicio 2 mostrando las cabeceras donde vemos los servidores por los que ha pasado el correo.</p>

    <p><img src="/assets/images/correo/5.png" alt="5" /></p>
  </li>
  <li>
    <p>Muestra el log del sistema donde se comprueba que el correo se ha recibido con éxito en el ejercicio 3.</p>

    <p><img src="/assets/images/correo/8.png" alt="8" /></p>
  </li>
  <li>
    <p><strong>EXTRA: Ejercicio propuesto por el profesor</strong>:</p>

    <p><img src="/assets/images/correo/9.png" alt="9" /></p>

    <p><img src="/assets/images/correo/10.png" alt="10" /></p>
  </li>
</ol>]]></content><author><name></name></author><category term="HLC+SRI" /><summary type="html"><![CDATA[En este post, vamos a implementar en nuestro escenario un servidor de correo.]]></summary></entry><entry><title type="html">Desarrollo y despliegue de una aplicación Java simple</title><link href="/iaw/2023/01/09/java-simple.html" rel="alternate" type="text/html" title="Desarrollo y despliegue de una aplicación Java simple" /><published>2023-01-09T12:47:17+01:00</published><updated>2023-01-09T12:47:17+01:00</updated><id>/iaw/2023/01/09/java-simple</id><content type="html" xml:base="/iaw/2023/01/09/java-simple.html"><![CDATA[<p>En este post vamos a crear una aplicación Java simple y desplegarla en un servidor Tomcat con Maven.</p>

<p><strong>Tomcat</strong> es un servidor web que permite ejecutar aplicaciones Java. En este post vamos a ver como desplegar una aplicación Java en un servidor Tomcat.</p>

<p>Mientras que <strong>Maven</strong> es una herramienta de construcción de software que nos permite gestionar el ciclo de vida de un proyecto Java. En este post vamos a ver como crear un proyecto Java con Maven.</p>

<h2 id="escenario">Escenario</h2>
<ol>
  <li>
    <p>Instala tomcat9 como hemos visto en la documentación.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> apt <span class="nb">install </span>tomcat9 tomcat9-admin
</code></pre></div>    </div>
  </li>
  <li>
    <p>Configuramos el panel de administración Tomcat-Manager y configúralo para su acceso.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> nano /etc/tomcat9/tomcat-users.xml
</code></pre></div>    </div>

    <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nt">&lt;tomcat-users&gt;</span>
     <span class="nt">&lt;role</span> <span class="na">rolename=</span><span class="s">"manager-gui"</span><span class="nt">/&gt;</span>
     <span class="nt">&lt;user</span> <span class="na">username=</span><span class="s">"tomcat"</span> <span class="na">password=</span><span class="s">"s3cret"</span> <span class="na">roles=</span><span class="s">"manager-gui"</span><span class="nt">/&gt;</span>
 <span class="nt">&lt;/tomcat-users&gt;</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Instala la aplicación maven que nos va a ayudar a compilar aplicaciones java.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> apt <span class="nb">install </span>maven
</code></pre></div>    </div>
  </li>
  <li>
    <p>A continuación vamos a generar un proyecto, que será el esqueleto de nuestra aplicación Java, para ello ejecutamos:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> mvn archetype:generate <span class="nt">-DgroupId</span><span class="o">=</span>com.app.example <span class="nt">-DartifactId</span><span class="o">=</span>java-app <span class="nt">-DarchetypeArtifactId</span><span class="o">=</span>maven-archetype-quickstart <span class="nt">-DinteractiveMode</span><span class="o">=</span><span class="nb">false</span>
</code></pre></div>    </div>

    <p>La estructura de nuestro directorio sería la siguiente:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> java-app/
 ├── pom.xml
 └── src
     ├── main
     │   ├── java
     │   │   └── com
     │   │       └── app
     │   │           └── example
     │   │               └── App.java
     │   └── resources
     └── <span class="nb">test</span>
         └── java
             └── com
                 └── app
                     └── example
                         └── AppTest.java
</code></pre></div>    </div>
  </li>
  <li>
    <p>Modificamos el fichero <code class="language-plaintext highlighter-rouge">java-app/pom.xml</code> para que tenga la siguiente estructura:</p>

    <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>     <span class="cp">&lt;?xml version = "1.0" encoding = "UTF-8"?&gt;</span>
     <span class="nt">&lt;project</span> <span class="na">xmlns =</span> <span class="s">"http://maven.apache.org/POM/4.0.0"</span> 
        <span class="na">xmlns:xsi =</span> <span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>

     <span class="na">xsi:schemaLocation =</span> <span class="s">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span class="nt">&gt;</span>
     <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>

        <span class="nt">&lt;groupId&gt;</span>com.tutorialspoint<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>hello-world<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;version&gt;</span>1<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;packaging&gt;</span>war<span class="nt">&lt;/packaging&gt;</span>

        <span class="nt">&lt;parent&gt;</span>
           <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
           <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-parent<span class="nt">&lt;/artifactId&gt;</span>
           <span class="nt">&lt;version&gt;</span>2.3.0.RELEASE<span class="nt">&lt;/version&gt;</span>
           <span class="nt">&lt;relativePath/&gt;</span> 
        <span class="nt">&lt;/parent&gt;</span>

        <span class="nt">&lt;properties&gt;</span>
           <span class="nt">&lt;project.build.sourceEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.build.sourceEncoding&gt;</span>
           <span class="nt">&lt;project.reporting.outputEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.reporting.outputEncoding&gt;</span>
           <span class="nt">&lt;java.version&gt;</span>1.8<span class="nt">&lt;/java.version&gt;</span>
           <span class="nt">&lt;tomcat.version&gt;</span>9.0.37<span class="nt">&lt;/tomcat.version&gt;</span>
        <span class="nt">&lt;/properties&gt;</span>

        <span class="nt">&lt;dependencies&gt;</span>
           <span class="nt">&lt;dependency&gt;</span>
              <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
              <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-web<span class="nt">&lt;/artifactId&gt;</span>
           <span class="nt">&lt;/dependency&gt;</span>
           <span class="nt">&lt;dependency&gt;</span>  
              <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>  
     	 <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-tomcat<span class="nt">&lt;/artifactId&gt;</span>  
     	 <span class="nt">&lt;scope&gt;</span>provided<span class="nt">&lt;/scope&gt;</span>  
           <span class="nt">&lt;/dependency&gt;</span>   
           <span class="nt">&lt;dependency&gt;</span>
              <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
              <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-test<span class="nt">&lt;/artifactId&gt;</span>
              <span class="nt">&lt;scope&gt;</span>test<span class="nt">&lt;/scope&gt;</span>
           <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;/dependencies&gt;</span>

        <span class="nt">&lt;build&gt;</span>
           <span class="nt">&lt;plugins&gt;</span>
              <span class="nt">&lt;plugin&gt;</span>
                 <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
                 <span class="nt">&lt;artifactId&gt;</span>spring-boot-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
              <span class="nt">&lt;/plugin&gt;</span>
           <span class="nt">&lt;/plugins&gt;</span>
        <span class="nt">&lt;/build&gt;</span>

     <span class="nt">&lt;/project&gt;</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Construimos la aplicación, y para ello modificamos el fichero <code class="language-plaintext highlighter-rouge">src/main/java/com/app/example/App.java</code> para que tenga la siguiente estructura:</p>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="kn">package</span> <span class="nn">com.app.example</span><span class="o">;</span>

 <span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>
 <span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>
 <span class="kn">import</span> <span class="nn">org.springframework.boot.builder.SpringApplicationBuilder</span><span class="o">;</span>
 <span class="kn">import</span> <span class="nn">org.springframework.boot.web.servlet.support.SpringBootServletInitializer</span><span class="o">;</span>
 <span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestMapping</span><span class="o">;</span>
 <span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RestController</span><span class="o">;</span>

 <span class="nd">@SpringBootApplication</span>
 <span class="nd">@RestController</span>
 <span class="kd">public</span> <span class="kd">class</span> <span class="nc">App</span> <span class="kd">extends</span> <span class="nc">SpringBootServletInitializer</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="nc">SpringApplicationBuilder</span> <span class="nf">configure</span><span class="o">(</span><span class="nc">SpringApplicationBuilder</span> <span class="n">application</span><span class="o">)</span> <span class="o">{</span>
       <span class="k">return</span> <span class="n">application</span><span class="o">.</span><span class="na">sources</span><span class="o">(</span><span class="nc">App</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
       <span class="nc">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="nc">App</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">hello</span><span class="o">()</span> <span class="o">{</span>
       <span class="k">return</span> <span class="s">"&lt;center&gt;Hola mundo!!!&lt;/center&gt;"</span><span class="o">;</span>
    <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Construimos la aplicación, y para ello ejecutamos:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> mvn package
</code></pre></div>    </div>
  </li>
  <li>
    <p>Copiamos el fichero <code class="language-plaintext highlighter-rouge">java-app/target/hello-world-1.war</code> a la carpeta <code class="language-plaintext highlighter-rouge">/var/lib/tomcat9/webapps/</code> y reiniciamos el servicio de tomcat9.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> systemctl restart tomcat9
</code></pre></div>    </div>

    <p><img src="/assets/images/java-simple/1.png" alt="1" /></p>
  </li>
</ol>

<h2 id="comprobación">Comprobación</h2>
<p>Si accedemos a la ip de nuestro servidor, veremos el mensaje <code class="language-plaintext highlighter-rouge">Hola mundo!!!</code> en el navegador.</p>

<p><img src="/assets/images/java-simple/2.png" alt="2" /></p>

<p>Y si accedemos al Tomcat-Manager, veremos que la aplicación se ha desplegado correctamente.</p>

<p><img src="/assets/images/java-simple/3.png" alt="3" /></p>]]></content><author><name></name></author><category term="IAW" /><summary type="html"><![CDATA[En este post vamos a crear una aplicación Java simple y desplegarla en un servidor Tomcat con Maven.]]></summary></entry></feed>